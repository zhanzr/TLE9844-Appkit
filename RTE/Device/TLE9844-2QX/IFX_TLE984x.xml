<?xml version="1.0" encoding="UTF-8" ?><!--sha256=4854C2E5A3E632EC88D16AC7C00809408035900276CE5A49B76EC0D40A376E26-->
<!--file IFX_TLE984x.xml                                                                 -->
<!--brief ePower Modules configuration                                              -->
<!--                                                                                -->
<!--You can use this file under the terms of the IFX License.                       -->
<!--                                                                                -->
<!--This file is distributed in the hope that it will be useful,                    -->
<!--but WITHOUT ANY WARRANTY; without even the implied warranty of                  -->
<!--MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                   -->
<!--IFX License for more details (IFX_License.txt).                                 -->
<!--                                                                                -->
<!--This file may be used, copied, and distributed, with or without                 -->
<!--modification, provided that all copyright notices are retained;                 -->
<!--that all modifications to this file are prominently noted in the                -->
<!--modified file; and that this paragraph is not modified.                         -->
<!--                                                                                -->
<!--copyright Copyright (C) 2012 Infineon Technologies AG                           -->
<!--                                                                                -->
<!--********************************************************************************-->
<!--**        Infineon ePower Family TLE9844 Module Configuration Files           **-->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--**                      Author(s) Identity                                    **-->
<!--********************************************************************************-->
<!--** Initials     Name                                                          **-->
<!--** AV           Axel Viebig                                                   **-->
<!--** DM           Daniel Mysliwitz                                              **-->
<!--** MK           Martin Kilian                                                 **-->
<!--** KC           Kay Claussen                                                  **-->
<!--**                                                                            **-->
<!--********************************************************************************-->
<!--                                                                                -->
<!--********************************************************************************-->
<!--**                      Revision Control History                              **-->
<!--********************************************************************************-->
<!--*                                                                              *-->
<!--* V1.0.1: 2015-06-29, AV:   -Initial version                                   *-->
<!--* V1.0.2: 2015-09-28, AV:   -Fixed missing header file generation for SCU      *-->
<!--*                           -Renamed CPU_NVIC_ISER0 to CPU_NVIC_ISER           *-->
<!--*                           -Corrected SSC_CON.BM location                     *-->
<!--*                           -Introducing button with label="Inactive" and      *-->
<!--*                            making it "default" to solve the problem_in_      *-->
<!--*                            cfgwiz(*) that "lockon" directives are still      *-->
<!--*                            effective for deactivated sections/peripherals    *-->
<!--*                            (*)Choose CC6_CH0 as T21EX default control input  *-->
<!--*                           -Changed SCU NVM protection (M0=von Neumann type)  *-->
<!--*                           -MON_CNF1 renamed to MON_CNF14 (TLE984x.h conflict)*-->
<!--*                           -Corrected SCU VCORANGE (not enough info by spec)  *-->
<!--*                           -SCU_OSC_CON[7:0] formula changed                  *-->
<!--* V1.0.3: 2015-10-23, AV:   -Added EIM and ESM Interrupts for ADC1             *-->
<!--*                           -Added Wakeup Int. enable/Callback def. in PMU     *-->
<!--*                           -Added 3 NMI CALLBACKs for OT and Supply Pre       *-->
<!--*                           -Improved NMI ECC structure                        *-->
<!--*                           -Removed ADC2 Ch6 INT config (already in LS1/2)    *-->
<!--*                           -Corrected SCU_SYS_SUPPLY...=>SCUPM_SYS_SUPPLY...  *-->
<!--*                           -Corrected PMU_PMU_SUPPLY...=>PMU_SUPPLY...        *-->
<!--*                           -PMU_VDDEXT_OT...=>PMU_VDDEXT_OV...                *-->
<!--*                           -Removed SCU_NMI_PRE_CALLBACK                      *-->
<!--*                           -Renamed GPT2_CAPREL_CALLBACK=>GPT12_CAPREL...     *-->
<!--*                           -Corrected ADC1_ESM=>ADC1_CHX_ESM                  *-->
<!--*                           -Corrected ADC1_IRQEN=>ADC1_IRQEN_1                *-->
<!--* V1.0.4: 2015-10-26, AV:   -ADC1_IRQEN_2 moved to adc1_defines.h              *-->
<!--* V1.0.5: 2015-10-29, AV:   -Own Section for DU Measurements                   *-->
<!--* V1.0.6: 2015-11-03, AV:   -Several changes for DU Measurements               *-->
<!--* V1.0.7: 2015-11-09, AV:   -Deactivated rwpt configuration options for ADC2   *-->
<!--*                           -Adapted NN name changes TIMER2_T2->TIMER2_ and    *-->
<!--*                            TIMER21_T2->TIMER21_ from V1.0.4a                 *-->
<!--*                           -Corrected GPT12T5 erroneous Callback activation   *-->
<!--*                           -Corrected LS OT detection text in Filter settings *-->
<!--* V1.0.8: 2015-11-18, AV:   -DU Section completely reorganized, ADC1 Thresholds*-->
<!--*                           -recalculated, settings should be revised          *-->
<!--*                           -improvements in threshold interrupt dependencies  *-->
<!--*                           -rwpt calibration on/off removed for ADC2          *-->
<!--*                           -rwpt filter coefficient def. removed for ADC2     *-->
<!--*                           -DU threshold-based Interrupt definition disabled  *-->
<!--*                            as Interrupt is not forwarded in Rev.AC           *-->
<!--*                           -changed ADC2 Temperature calculations (to be vfd) *-->
<!--*                           -changed HS/LS PWM Source selection menus          *-->
<!--*                           -added Interrupt priority level clarification      *-->
<!--* V1.0.9: 2015-11-20, AV:   -LSx OT Prewarn Interrupt config options removed   *-->
<!--*                           -Texting changes in NMI section                    *-->
<!--*                           -Port "Function" renamed to "Output Function"      *-->
<!--*                           -Changed default settings for NVM Boot+Code prot.  *-->
<!--*                           -Added warning for for NVM Code prot.              *-->
<!--* V1.1.0: 2015-11-27, AV:   -Expanded to seven 984x variants (>25MHz/HS2)      *-->
<!--*                           -Choosable Interrupt priority changed from 0..3    *-->
<!--*                           -corrected wrong documented (also in debugger)     *-->
<!--*                            EXINTn Trigger select assignment:                 *-->
<!--*                            0 (and not 3) is "Bypass Edge detection..."       *-->
<!--*                            3 (and not 2) is "...both edges"                  *-->
<!--*                            2 (and not 0) is "...fallig edge"                 *-->
<!--* V1.1.1: 2016-03-22, DM:   interrupt_defines renamed to int_defines           *-->
<!--*                           epower_defines renamed to bsl_defines              *-->
<!--*                           NMI interrupts added                               *-->
<!--*                           Supply interrupts moved to ADC2                    *-->
<!--*                           PORT: function grouping changed                    *-->
<!--*                           Timer2: T2EX internal LIN Trx. added               *-->
<!--*                           Timer21: input pin select 'none' option added      *-->
<!--* V1.1.2: 2016-05-03, DM:   BSL options added                                  *-->
<!--* V1.1.3: 2016-05-06, DM:   frequency selection for automatic clock select     *-->
<!--*                           adapted                                            *-->
<!--* V1.1.4: 2016-06-08, MK:   Removed Lock on SWM_SM_CHANNELs to DCH1-4 Interrupt*-->
<!--*                           Added Locks for DEVICES but TLE9845QX              *-->
<!--* V1.1.5: 2016-06-28, DM:   ADC1: upper/lower threshold settings moved into    *-->
<!--*                           the interrupt branch.                              *-->
<!--*                           ADC1: lower thresholds for MON and GPIOs set to 0  *-->
<!--* V1.1.6: 2017-02-16, KC:   Interrupt definition structure enhanced            *-->
<!--*                           LIN End-of-Synch, Error-in-Synch interrupt added   *-->
<!--*                           LIN Synch Break recoginition range (BGSEL) calc.   *-->
<!--*                           LIN Baudrate detection selection added (config.    *-->
<!--*                           Timer2)                                            *-->
<!--* V1.1.7: 2017-06-27, DM:   SSC1/2 Pin Selection calculation corrected         *-->
<!--* V1.1.8: 2017-10-24, KC:   Removed lock for pmu sleep mode                    *-->
<!--*                           h-file for SCU_EXINTx_y_INT_EN is isr_defines.h    *-->
<!--* V1.1.9: 2017-11-08, KC:   SCU: XTAL range changed from 5-25 MHz to 4-6 MHz   *-->
<!--*                           ADC1: default for minimum sampling time corrected  *-->
<!--*                           ADC1: default for MODPISEL4 and CTRL3 corrected    *-->
<!--*                           ADC2: default for CTRL2, CTRL4, FILT_xy_CTRL corr. *-->
<!--*                           SCU:  default for EXICONx[4] und [5] corrected     *-->
<!--*                           CCU6: default for INP (SRx) corrected              *-->
<!--*                           SSC2: Receive input selection in master mode corr. *-->
<!--* V1.2.0: 2017-11-16, KC:   ADC2: Comparator trigger level set to reg. default *-->
<!--* V1.2.1: 2017-12-06, KC:   MON:  SCU_MONIEN moved to isr_defines.h            *-->
<!--*                           PMU:  Cycling Sense Enable for each MON pin added  *-->
<!--*                           PMU:  default for PMU_SLEEP corrected              *-->
<!--* V1.2.2: 2018-03-13, KC:   CCU6: CCU6_TRAP_INT_EN moved to isr_defines.h      *-->
<!--*                           CCU6: CCU6_IEN moved to ccu6_defines.h             *-->
<!--*                           T2:   SCU_MODPISEL2 moved to scu_defines.h         *-->
<!--*                           GPT12: Lockon for GPT12E_TEMP_T6OUT corrected      *-->
<!--*                           INT:  SCU_MODIEN2/3/4 moved to int_defines.h       *-->
<!--*                           PMU:  PMU_VDDEXT_CTRL moved to pmu_defines.h        *-->
<!--********************************************************************************-->
<ifxmlcfg version="0.3">
	<version label="V1.2.2"/>
	<module label="ePower" desc="Infineon Embedded Power">
		<header define="bsl_defines.h">
			<combo label="Device" define="DEVICE" default="9844">
				<item label="TLE9842QX" value="9842" lockon="ADC2_CTRL2[0]=1;HS_CTRL[16]=0;PMU_MON5_WAKE=0;MON_CNF5[0]=0;SCU_MONIEN[4]=0;ADC1_IRQEN_1[24]=0;ADC1_IRQEN_1[25]=0;ADC1_IRQEN_1[26]=0;ADC1_IRQEN_1[27]=0;ADC1_IRQEN_1[28]=0;ADC1_IRQEN_1[29]=0;ADC1_IRQEN_1[30]=0;ADC1_IRQEN_1[31]=0"/>
				<item label="TLE9843QX" value="9843" lockon="ADC2_CTRL2[0]=1;HS_CTRL[16]=0;PMU_MON5_WAKE=0;MON_CNF5[0]=0;SCU_MONIEN[4]=0;ADC1_IRQEN_1[24]=0;ADC1_IRQEN_1[25]=0;ADC1_IRQEN_1[26]=0;ADC1_IRQEN_1[27]=0;ADC1_IRQEN_1[28]=0;ADC1_IRQEN_1[29]=0;ADC1_IRQEN_1[30]=0;ADC1_IRQEN_1[31]=0"/>
				<item label="TLE9844QX" value="9844" lockon="ADC2_CTRL2[0]=1;HS_CTRL[16]=0;PMU_MON5_WAKE=0;MON_CNF5[0]=0;SCU_MONIEN[4]=0;ADC1_IRQEN_1[24]=0;ADC1_IRQEN_1[25]=0;ADC1_IRQEN_1[26]=0;ADC1_IRQEN_1[27]=0;ADC1_IRQEN_1[28]=0;ADC1_IRQEN_1[29]=0;ADC1_IRQEN_1[30]=0;ADC1_IRQEN_1[31]=0"/>
				<item label="TLE9845QX" value="9845" lockon="ADC2_CTRL2[0]=1"/>
				<item label="TLE9842-2QX" value="98422" lockon="ADC2_CTRL2[0]=1;ADC1_IRQEN_1[24]=0;ADC1_IRQEN_1[25]=0;ADC1_IRQEN_1[26]=0;ADC1_IRQEN_1[27]=0;ADC1_IRQEN_1[28]=0;ADC1_IRQEN_1[29]=0;ADC1_IRQEN_1[30]=0;ADC1_IRQEN_1[31]=0"/>
				<item label="TLE9843-2QX" value="98432" lockon="ADC2_CTRL2[0]=1;ADC1_IRQEN_1[24]=0;ADC1_IRQEN_1[25]=0;ADC1_IRQEN_1[26]=0;ADC1_IRQEN_1[27]=0;ADC1_IRQEN_1[28]=0;ADC1_IRQEN_1[29]=0;ADC1_IRQEN_1[30]=0;ADC1_IRQEN_1[31]=0"/>
				<item label="TLE9844-2QX" value="98442" lockon="ADC2_CTRL2[0]=1;ADC1_IRQEN_1[24]=0;ADC1_IRQEN_1[25]=0;ADC1_IRQEN_1[26]=0;ADC1_IRQEN_1[27]=0;ADC1_IRQEN_1[28]=0;ADC1_IRQEN_1[29]=0;ADC1_IRQEN_1[30]=0;ADC1_IRQEN_1[31]=0"/>
			</combo>
			<button label="NAC/NAD Configuration" define="NAC_NAD_EN" default="1">
				<combo label="BSL Interface Select" define="NAD_NAC[15:8]" default="Fast LIN">
					<item label="Normal LIN"/>
					<item label="Fast LIN"/>
				</combo>
				<combo label="BSL Active Time (NAC)" define="NAD_NAC[23:16]" default="30 ms">
					<item label="BSL deactivated"/>
					<item label="5 ms"/>
					<item label="10 ms"/>
					<item label="15 ms"/>
					<item label="20 ms"/>
					<item label="25 ms"/>
					<item label="30 ms"/>
					<item label="35 ms"/>
					<item label="40 ms"/>
					<item label="45 ms"/>
					<item label="50 ms"/>
					<item label="55 ms"/>
					<item label="60 ms"/>
					<item label="65 ms"/>
					<item label="70 ms"/>
					<item label="75 ms"/>
					<item label="80 ms"/>
					<item label="85 ms"/>
					<item label="90 ms"/>
					<item label="95 ms"/>
					<item label="100 ms"/>
					<item label="105 ms"/>
					<item label="110 ms"/>
					<item label="115 ms"/>
					<item label="120 ms"/>
					<item label="125 ms"/>
					<item label="130 ms"/>
					<item label="135 ms"/>
					<item label="140 ms"/>
					<item label="infinite" value="255"/>
				</combo>
				<edit label="NAD value (Normal LIN only)" define="NAD_NAC[31:24]" default="0x80"/>
			</button>
		</header>
	</module>
	<module label="SCU" desc="System Control Unit">
		<header define="scu_defines.h">
			<math label="fSYS (25/40 MHz max.)" unit="MHz" define="SCU_PLL_fPLL" header="scu_defines.h" formula="(SCU_XTAL_EN&lt;1?5:SCU_XTAL_FREQ)*$SCU_PLL_CON[7:4]/($SCU_CMCON1[9:8]*$SCU_CMCON1[5:4])"/>
			<branch label="Clock Configuration">
				<math label="" define="SCU_OSC_CON[7:0]" role="hex" header="scu_defines.h" formula="SCU_XTAL_EN&lt;1?0x10:0x01"/>
				<radio define="SCU_AUTO_FSYS_SEL" header="scu_defines.h">
					<button label="Automatic Clock Configuration" lockon="SCU_XTAL_EN=0" header="scu_defines.h">
						<combo  label="fSYS" define="SCU_AUTO_FSYS[31:0]" default="25000000" header="scu_defines.h">
							<item label="40 MHz (TLE984x-2QX/TLE9845 only)" value="40000000" lockon="SCU_PLL_CON[7:4]=80;SCU_CMCON1[5:4]=2;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS / 2;SCU_APCLK[12:8]=19"/>
							<item label="37.5 MHz (TLE984x-2QX/TLE9845 only)" value="37500000" lockon="SCU_PLL_CON[7:4]=90;SCU_CMCON1[5:4]=3;SCU_CMCON1[9:8]=4;SCU_APCLK[1:0]=fSYS / 2;SCU_APCLK[12:8]=18"/>
							<item label="32 MHz (TLE984x-2QX/TLE9845 only)" value="32000000" lockon="SCU_PLL_CON[7:4]=160;SCU_CMCON1[5:4]=5;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS / 2;SCU_APCLK[12:8]=15"/>
							<item label="30 MHz (TLE984x-2QX/TLE9845 only)" value="30000000" lockon="SCU_PLL_CON[7:4]=90;SCU_CMCON1[5:4]=3;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS / 2;SCU_APCLK[12:8]=14"/>
							<item label="27.5 MHz (TLE984x-2QX/TLE9845 only)" value="27500000" lockon="SCU_PLL_CON[7:4]=88;SCU_CMCON1[5:4]=4;SCU_CMCON1[9:8]=4;SCU_APCLK[1:0]=fSYS / 2;SCU_APCLK[12:8]=13"/>
							<item label="25 MHz (TLE984x all variants)" value="25000000" lockon="SCU_PLL_CON[7:4]=100;SCU_CMCON1[5:4]=4;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS;SCU_APCLK[12:8]=12"/>
							<item label="22.5 MHz (TLE984x all variants)" value="22500000" lockon="SCU_PLL_CON[7:4]=90;SCU_CMCON1[5:4]=4;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS;SCU_APCLK[12:8]=11"/>
							<item label="20 MHz (TLE984x all variants)" value="20000000" lockon="SCU_PLL_CON[7:4]=80;SCU_CMCON1[5:4]=4;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS;SCU_APCLK[12:8]=9"/>
							<item label="18 MHz (TLE984x all variants)" value="18000000" lockon="SCU_PLL_CON[7:4]=90;SCU_CMCON1[5:4]=5;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS;SCU_APCLK[12:8]=8"/>
							<item label="16 MHz (TLE984x all variants)" value="16000000" lockon="SCU_PLL_CON[7:4]=80;SCU_CMCON1[5:4]=5;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS;SCU_APCLK[12:8]=7"/>
							<item label="15 MHz (TLE984x all variants)" value="15000000" lockon="SCU_PLL_CON[7:4]=75;SCU_CMCON1[5:4]=5;SCU_CMCON1[9:8]=5;SCU_APCLK[1:0]=fSYS;SCU_APCLK[12:8]=7"/>
						</combo>
					</button>
					<button label="Manual Clock Configuration">
						<button define="SCU_XTAL_EN" label="Enable external XTAL" header="scu_defines.h">
							<edit define="SCU_XTAL_FREQ" label="XTAL Frequency (MHz)" header="scu_defines.h" default="5" range="4;6"/>
						</button>
						<branch label="PLL Setting">
							<combo label="N-Multiplier" define="SCU_PLL_CON[7:4]" header="scu_defines.h" default="50">
								<item label="48"/>
								<item label="50"/>
								<item label="51"/>
								<item label="52"/>
								<item label="54"/>
								<item label="60"/>
								<item label="67"/>
								<item label="72"/>
								<item label="75"/>
								<item label="78"/>
								<item label="80"/>
								<item label="88"/>
								<item label="90"/>
								<item label="94"/>
								<item label="100"/>
								<item label="160"/>
							</combo>
							<combo label="K2-Divider" define="SCU_CMCON1[5:4]" header="scu_defines.h" default="2">
								<item label="2"/>
								<item label="3"/>
								<item label="4"/>
								<item label="5"/>
							</combo>
							<combo label="P-Divider" define="SCU_CMCON1[9:8]" header="scu_defines.h" default="5">
								<item label="4"/>
								<item label="5"/>
								<item label="6"/>
							</combo>
							<math label="fSYS" unit="Hz" define="SCU_FSYS" header="scu_defines.h" formula="1000000*(SCU_XTAL_EN&lt;1?5:SCU_XTAL_FREQ)*$SCU_PLL_CON[7:4]/($SCU_CMCON1[9:8]*$SCU_CMCON1[5:4])"/>
						</branch>
						<branch label="Analog Clock Configuration">
							<combo label="MI_CLK (~24MHz)" define="SCU_APCLK[1:0]" header="scu_defines.h" default="fSYS">
								<item label="fSYS" value="0"/>
								<item label="fSYS / 2" value="1"/>
								<item label="fSYS / 3" value="2"/>
								<item label="fSYS / 4" value="3"/>
							</combo>
							<math label="MI_CLK (should be ~24MHz)" unit="MHz" define="SCU_APCLK_MI_CLK" header="scu_defines.h" formula="SCU_PLL_fPLL/(SCU_APCLK[1:0]+1)"/>
							<edit label="Filter Clock Divider" define="SCU_APCLK[12:8]" header="scu_defines.h" default="9"/>
							<math label="Filter Clock (~2MHz)" unit="MHz" define="SCU_APCLK_FILT_CLK" header="scu_defines.h" formula="SCU_PLL_fPLL/(SCU_APCLK[12:8]+1)"/>
						</branch>
					</button>
				</radio>
			</branch>
			<button define="SCU_COCON[7]" label="Clock out enable" header="scu_defines.h" >
				<radio define="SCU_COCON[6]" default="1" header="scu_defines.h" >
					<button label="Output f_CCLK"/>
					<button label="Select further">
						<radio define="SCU_COCON[4]" default="1" header="scu_defines.h" >
							<button label="Output f_OSC"/>
							<button label="Output fSYS">
								<combo define="SCU_COCON[3:0]" label="Clock Out Divider [fSYS/n]" header="scu_defines.h" default="40">
									<item label="1"/>
									<item label="2"/>
									<item label="3"/>
									<item label="4"/>
									<item label="6"/>
									<item label="8"/>
									<item label="10"/>
									<item label="12"/>
									<item label="14"/>
									<item label="16"/>
									<item label="18"/>
									<item label="20"/>
									<item label="24"/>
									<item label="32"/>
									<item label="36"/>
									<item label="40"/>
								</combo>
								<button label="Ensure 50% duty cycle" define="SCU_COCON[5]" header="scu_defines.h" default="1"/>
							</button>
						</radio>
					</button>
				</radio>
				<combo define="SCU_PINSEL" label="Clock Out Pin Select" header="scu_defines.h" >
					<item label="P0.4" lockon="PORT_P0_DIR[4]=Output;PORT_P0_4_ALT[1:0]=CLKOUT_0"/>
					<item label="P1.4" lockon="PORT_P1_DIR[4]=Output;PORT_P1_4_ALT[1:0]=CLKOUT_1"/>
				</combo>
				<math label="Clock Out Frequency at selected GPIO" unit="MHz" define="SCU_CKOUT_FREQ" header="scu_defines.h" formula="SCU_COCON[6]&lt;1?SCU_PLL_fPLL:SCU_COCON[4]&lt;1?5:(SCU_PLL_fPLL/($SCU_COCON[3:0]*(SCU_COCON[5]&lt;1?1:2)))"/>
			</button>
			<branch label="WDT1 (mandatory watchdog)">
				<edit label="Watchdog Period [ms]" define="SCUPM_WDT1_PERIOD_EDIT" header="scu_defines.h" default="1008" range="16;1008"/>
				<math label="Watchdog Period effectiv" unit="ms" define="SCUPM_WDT1_PERIOD" header="scu_defines.h" formula="trunc(SCUPM_WDT1_PERIOD_EDIT/16)*16"/>
				<math label="" define="SCUPM_WDT1_TRIG[5:0]" header="scu_defines.h" formula="SCUPM_WDT1_PERIOD/16"/>
				<math label="" define="SCUPM_WDT1_TRIGGER" header="scu_defines.h" formula="trunc(SCUPM_WDT1_PERIOD*0.694)"/>
			</branch>
			<branch label="NVM Protection">
				<button label="NVM Boot Protection" define="SCU_NVM_BOOT_PROT" header="scu_defines.h" default="0">
				</button>
				<button label="NVM Code Protection" define="SCU_NVM_CODE_PROT" header="scu_defines.h" default="0">
				</button>
				<button label="NVM Data Protection" define="SCU_NVM_DATA_PROT" header="scu_defines.h" default="0">
				</button>
				<edit label="Password [32bit]" define="SCU_NVM_PROT_PW[31:0]" header="scu_defines.h" default="0"/>
			</branch>
		</header>
	</module>
	<module label="PMU" desc="Power Management Unit">
		<header define="pmu_defines.h">
			<branch label="VDDEXT">
				<button label="Turned on" define="PMU_VDDEXT_CTRL[0]"/>
				<button label="Cyclic Sense enable" define="PMU_VDDEXT_CTRL[1]"/>
				<button label="Fail Interrupt" define="PMU_VDDEXT_FAIL_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
					<button label="Undervoltage" define="PMU_VDDEXT_UV_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
						<button label="Enable Interrupt" define="PMU_VDDEXT_UV_EN"/>
						<edit label="Call Back" define="PMU_VDDEXT_UV_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Over-Temperature" define="PMU_VDDEXT_OT_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
						<button label="Enable Interrupt" define="PMU_VDDEXT_OT_EN"/>
						<edit label="Call Back" define="PMU_VDDEXT_OT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<math label="" define="PMU_VDDEXT_CTRL[2]" formula="PMU_VDDEXT_UV_EN .+ PMU_VDDEXT_OT_EN"/>
				</button>
			</branch>
			<branch label="Wake Up Sources">
				<button label="Cyclic Wake enable" define="PMU_SLEEP[2]" default="1">
					<edit label="Wake up after [ms]" define="PMU_CYC_WAKE_TIME" default="1024" range="2;2048"/>
					<math label="Wake up Exp" define="PMU_SLEEP[21:20]" formula="abs(PMU_CYC_WAKE_TIME/2)>=64?3:abs(PMU_CYC_WAKE_TIME/2)>=16?2:abs(PMU_CYC_WAKE_TIME/2)>=4?1:0"/>
					<math label="Wake up Man" define="PMU_SLEEP[19:16]" formula="trunc((PMU_CYC_WAKE_TIME/(4^PMU_SLEEP[21:20]))/2)-1"/>
					<math label="Wake up effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU_CYC_WAKE_EFF_TIME" formula="4^PMU_SLEEP[21:20]*(PMU_SLEEP[19:16]+1)*2"/>
				</button>
				<button label="Cyclic Sense enable" define="PMU_SLEEP[3]">
					<edit label="Wake up after [ms]" define="PMU_CYC_SENSE_SLP_TIME" default="2" range="2;2048"/>
					<math label="Cyclic Sense Exp" define="PMU_SLEEP[13:12]" formula="abs(PMU_CYC_SENSE_SLP_TIME/2)>=64?3:abs(PMU_CYC_SENSE_SLP_TIME/2)>=16?2:abs(PMU_CYC_SENSE_SLP_TIME/2)>=4?1:0"/>
					<math label="Cyclic Sense Man" define="PMU_SLEEP[11:8]" formula="trunc((PMU_CYC_SENSE_SLP_TIME/(4^PMU_SLEEP[13:12]))/2)-1"/>
					<math label="Cyclic Sense effective Time (4^EXP*(MAN+1)*2ms)" unit="ms" define="PMU_CYC_SENSE_EFF_SLP_TIME" formula="4^PMU_SLEEP[13:12]*(PMU_SLEEP[11:8]+1)*2"/>
					<edit label="Sense Time [us]" define="PMU_CYC_SENSE_ACT_TIME" default="10" range="10;160"/>
					<math label="Sense Time Man" define="PMU_SLEEP[26:24]" formula="trunc(PMU_CYC_SENSE_ACT_TIME/10)-1"/>
					<math label="Sense effective Time ((MAN+1)*10us)" unit="us" define="PMU_SENSE_EFF_SLP_TIME" formula="(PMU_SLEEP[26:24]+1)*10"/>
				</button>
				<button label="LIN wake up" define="PMU_LIN_WAKE_EN[7]">
					<combo label="Wake up Filter" define="PMU_CNF_WAKE_FILTER[0]">
						<item label="30 us"/>
						<item label="50 us"/>
					</combo>
				</button>
				<button label="MON1 wake up" define="PMU_MON1_WAKE" lockon="MON_CNF14[0]=1" default="1">
					<button label="wake on rising edge" define="PMU_MON1_WAKE_RISE" lockon="MON_CNF14[2]=1" default="1"/>
					<button label="wake on falling edge" define="PMU_MON1_WAKE_FALL" lockon="MON_CNF14[1]=1" default="1"/>
					<button label="enabled for cycle sense" define="PMU_MON1_CYCLE_SENSE" lockon="MON_CNF14[3]=1"/>
				</button>
				<button label="MON2 wake up" define="PMU_MON2_WAKE" lockon="MON_CNF14[8]=1" default="1">
					<button label="wake on rising edge" define="PMU_MON2_WAKE_RISE" lockon="MON_CNF14[10]=1" default="1"/>
					<button label="wake on falling edge" define="PMU_MON2_WAKE_FALL" lockon="MON_CNF14[9]=1" default="1"/>
					<button label="enabled for cycle sense" define="PMU_MON2_CYCLE_SENSE" lockon="MON_CNF14[11]=1"/>
				</button>
				<button label="MON3 wake up" define="PMU_MON3_WAKE" lockon="MON_CNF14[16]=1" default="1">
					<button label="wake on rising edge" define="PMU_MON3_WAKE_RISE" lockon="MON_CNF14[18]=1" default="1"/>
					<button label="wake on falling edge" define="PMU_MON3_WAKE_FALL" lockon="MON_CNF14[17]=1" default="1"/>
					<button label="enabled for cycle sense" define="PMU_MON3_CYCLE_SENSE" lockon="MON_CNF14[19]=1"/>
				</button>
				<button label="MON4 wake up" define="PMU_MON4_WAKE" lockon="MON_CNF14[24]=1" default="1">
					<button label="wake on rising edge" define="PMU_MON4_WAKE_RISE" lockon="MON_CNF14[26]=1" default="1"/>
					<button label="wake on falling edge" define="PMU_MON4_WAKE_FALL" lockon="MON_CNF14[25]=1" default="1"/>
					<button label="enabled for cycle sense" define="PMU_MON4_CYCLE_SENSE" lockon="MON_CNF14[27]=1"/>
				</button>
				<button label="MON5 wake up" define="PMU_MON5_WAKE" lockon="MON_CNF5[0]=1" default="1">
					<button label="wake on rising edge" define="PMU_MON5_WAKE_RISE" lockon="MON_CNF5[2]=1" default="1"/>
					<button label="wake on falling edge" define="PMU_MON5_WAKE_FALL" lockon="MON_CNF5[1]=1" default="1"/>
					<button label="enabled for cycle sense" define="PMU_MON5_CYCLE_SENSE" lockon="MON_CNF5[3]=1"/>
				</button>
				<combo label="MONx Wakeup Filter Time" define="PMU_CNF_WAKE_FILTER[1]">
					<item label="20 us"/>
					<item label="40 us"/>
				</combo>
				<branch label="GPIO wake up">
					<button label="PORT0 wake up" define="PMU_PORT0_WAKE">
						<branch label="Pin0">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO0[0]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO0[8]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO0[16]"/>
						</branch>
						<branch label="Pin1">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO0[1]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO0[9]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO0[17]"/>
						</branch>
						<branch label="Pin2">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO0[2]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO0[10]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO0[18]"/>
						</branch>
						<branch label="Pin3">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO0[3]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO0[11]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO0[19]"/>
						</branch>
						<branch label="Pin4">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO0[4]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO0[12]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO0[20]"/>
						</branch>
					</button>
					<button label="PORT1 wake up" define="PMU_PORT1_WAKE">
						<branch label="Pin0">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO1[0]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO1[8]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO1[16]"/>
						</branch>
						<branch label="Pin1">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO1[1]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO1[9]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO1[17]"/>
						</branch>
						<branch label="Pin2">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO1[2]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO1[10]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO1[18]"/>
						</branch>
						<branch label="Pin3">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO1[3]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO1[11]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO1[19]"/>
						</branch>
						<branch label="Pin4">
							<button label="rising edge" define="PMU_WAKE_CNF_GPIO1[4]"/>
							<button label="falling edge" define="PMU_WAKE_CNF_GPIO1[12]"/>
							<button label="cyclic sense" define="PMU_WAKE_CNF_GPIO1[20]"/>
						</branch>
					</button>
					<combo label="Wake up Filter" define="PMU_CNF_WAKE_FILTER[3:2]" default="40 us">
						<item label="5 us" value="3"/>
						<item label="10 us" value="0"/>
						<item label="20 us" value="1"/>
						<item label="40 us" value="2"/>
					</combo>
				</branch>
				<button label="Wakeup Interrupt" define="PMU_GPIO_WAKEUP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[14]=1">
						<button label="Enable Interrupt" define="SCU_WAKECON[0]" header="int_defines.h"/>
						<edit label="Call Back" define="PMU_WAKEUP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
			</branch>
			<branch label="Reset Settings">
				<combo label="Blind Time" define="PMU_CNF_RST_TFB[1:0]" default="31 us">
					<item label="0.5 us"/>
					<item label="1 us"/>
					<item label="5 us"/>
					<item label="31 us"/>
				</combo>
			</branch>
			<branch label="Power Saving Modes">
				<button label="Sleep Mode" define="PMU_SLEEP_MODE"/>
				<button label="Stop Mode" define="PMU_STOP_MODE">
					<combo label="VDDC level in Stop Mode" define="PMU_SLEEP[1]" default="0.9V">
						<item label="0.9V"/>
						<item label="1.5V"/>
					</combo>
					<button label="Exit Stop Mode with Reset" define="PMU_SLEEP[0]"/>
				</button>
			</branch>
			<branch label="Supply Interrupt">
				<button label="VDDC Over Voltage" define="PMU_VDDC_OV_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
					<button label="Enable Interrupt" define="PMU_VDDC_OV_EN"/>
					<edit label="Call Back" define="PMU_VDDC_OV_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="VDDC Over Load" define="PMU_VDDC_OL_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
					<button label="Enable Interrupt" define="PMU_VDDC_OL_EN"/>
					<edit label="Call Back" define="PMU_VDDC_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<math label="" define="PMU_SUPPLY_STS[2]" formula="PMU_VDDC_OV_EN .+ PMU_VDDC_OL_EN"/>
				<button label="VDDP Over Voltage" define="PMU_VDDP_OV_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
					<button label="Enable Interrupt" define="PMU_VDDP_OV_EN"/>
					<edit label="Call Back" define="PMU_VDDP_OV_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="VDDP Over Load" define="PMU_VDDP_OL_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
					<button label="Enable Interrupt" define="PMU_VDDP_OL_EN"/>
					<edit label="Call Back" define="PMU_VDDP_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<math label="" define="PMU_SUPPLY_STS[6]" formula="PMU_VDDP_OV_EN .+ PMU_VDDP_OL_EN"/>
			</branch>
		</header>
	</module>
	<module label="MON" desc="High Voltage Monitor Input">
		<header define="mon_defines.h">
			<button label="MON1 enable" define="MON_CNF14[0]" default="1">
				<button label="wake on rising edge" define="MON_CNF14[2]"/>
				<button label="wake on falling edge" define="MON_CNF14[1]"/>
				<button label="pull up enable" define="MON_CNF14[5]"/>
				<button label="pull down enable" define="MON_CNF14[4]"/>
				<button label="cycle sense enable" define="MON_CNF14[3]"/>
				<button label="Interrupt" define="SCU_MONIEN[0]" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
					<button label="Rising Edge" define="MON1_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[0]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="MON1_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Falling Edge" define="MON1_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[1]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="MON1_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
			</button>
			<button label="MON2 enable" define="MON_CNF14[8]" default="1">
				<button label="wake on rising edge" define="MON_CNF14[10]"/>
				<button label="wake on falling edge" define="MON_CNF14[9]"/>
				<button label="pull up enable" define="MON_CNF14[13]"/>
				<button label="pull down enable" define="MON_CNF14[12]"/>
				<button label="cycle sense enable" define="MON_CNF14[11]"/>
				<button label="Interrupt" define="SCU_MONIEN[1]" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
					<button label="Rising Edge" define="MON2_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[2]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="MON2_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Falling Edge" define="MON2_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[3]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="MON2_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
			</button>
			<button label="MON3 enable" define="MON_CNF14[16]" default="1">
				<button label="wake on rising edge" define="MON_CNF14[18]"/>
				<button label="wake on falling edge" define="MON_CNF14[17]"/>
				<button label="pull up enable" define="MON_CNF14[21]"/>
				<button label="pull down enable" define="MON_CNF14[20]"/>
				<button label="cycle sense enable" define="MON_CNF14[19]"/>
				<button label="Interrupt" define="SCU_MONIEN[2]" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
					<button label="Rising Edge" define="MON3_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[4]" header="int_defines.h" default="1"/>
						<edit label="Rising Edge Call Back" define="MON3_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Falling Edge" define="MON3_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[5]" header="int_defines.h" default="1"/>
						<edit label="Falling Edge Call Back" define="MON3_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
			</button>
			<button label="MON4 enable" define="MON_CNF14[24]" default="1">
				<button label="wake on rising edge" define="MON_CNF14[26]"/>
				<button label="wake on falling edge" define="MON_CNF14[25]"/>
				<button label="pull up enable" define="MON_CNF14[29]"/>
				<button label="pull down enable" define="MON_CNF14[28]"/>
				<button label="cycle sense enable" define="MON_CNF14[27]"/>
				<button label="Interrupt" define="SCU_MONIEN[3]" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
					<button label="Rising Edge" define="MON4_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[6]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="MON4_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Falling Edge" define="MON4_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[7]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="MON4_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
			</button>
			<button label="MON5 enable" define="MON_CNF5[0]" default="1">
				<button label="wake on rising edge" define="MON_CNF5[2]"/>
				<button label="wake on falling edge" define="MON_CNF5[1]"/>
				<button label="pull up enable" define="MON_CNF5[5]"/>
				<button label="pull down enable" define="MON_CNF5[4]"/>
				<button label="cycle sense enable" define="MON_CNF5[3]"/>
				<button label="Interrupt" define="SCU_MONIEN[4]" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
					<button label="Rising Edge" define="MON5_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[8]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="MON5_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Falling Edge" define="MON5_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON1[9]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="MON5_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</button>
			</button>
		</header>
	</module>
	<module label="Interrupt" desc="System Interrupts">
		<header define="int_defines.h">
			<button label="Global Interrupt enable" define="SCU_IEN0[31]" header="scu_defines.h"/>
			<branch label="NMI">
				<!--button label="WDT" define="SCU_NMI_WDT_INT_EN" header="isr_defines.h">			
					<button label="Enable Interrupt" define="SCU_NMICON[0]" header="int_defines.h"/>
					<edit label="Call Back" define="SCU_NMI_WDT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button-->
				<button label="PLL Loss-of-Lock" define="SCU_NMI_PLL_INT_EN" header="isr_defines.h">
					<button label="Enable Interrupt" define="SCU_NMICON[1]" header="int_defines.h"/>
					<edit label="Call Back" define="SCU_NMI_PLL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="NVM operation completed" define="SCU_NMI_NVM_INT_EN" header="isr_defines.h">
					<button label="Enable Interrupt" define="SCU_NMICON[2]" header="int_defines.h"/>
					<edit label="Call Back" define="SCU_NMI_NVM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="Over Temperature enable" define="SCU_NMICON[3]" header="scu_defines.h"/>
				<button label="Oscillator WDT" define="SCU_NMI_OWD_INT_EN" header="isr_defines.h">
					<button label="Enable Interrupt" define="SCU_NMICON[4]" header="int_defines.h"/>
					<edit label="Call Back" define="SCU_NMI_OWD_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="NVM mapping error" define="SCU_NMI_MAP_INT_EN" header="isr_defines.h">
					<button label="Enable Interrupt" define="SCU_NMICON[5]" header="int_defines.h"/>
					<edit label="Call Back" define="SCU_NMI_MAP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="ECC enable" define="SCU_NMICON[6]" header="scu_defines.h"/>
				<button label="Supply Prewarning enable" define="SCU_NMICON[7]" header="scu_defines.h"/>
			</branch>
			<branch label="ECC Interrupt">
				<button label="RAM Double Bit ECC Error" define="SCU_ECC_RAM_DB_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[6]=1">
					<button label="Enable Interrupt" define="SCU_EDCCON[0]" header="int_defines.h"/>
					<edit label="Call Back" define="SCU_ECC_RAM_DB_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="NVM Double Bit ECC Error" define="SCU_ECC_NVM_DB_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[6]=1">
					<button label="Enable Interrupt" define="SCU_EDCCON[2]" header="int_defines.h"/>
					<edit label="Call Back" define="SCU_ECC_NVM_DB_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
			</branch>
			<branch label="External Interrupts">
				<button label="EXINT0" define="SCU_MODIEN3[0]" header="int_defines.h" lockon="CPU_NVIC_ISER[12]=1">
					<button label="Trigger Rising Edge" define="SCU_EXINT0_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[0]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="EXINT0_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trigger Falling Edge" define="SCU_EXINT0_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[1]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="EXINT0_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<combo define="SCU_MODPISEL[1:0]" header="scu_defines.h" label="Pin Select" default="EXINT0_2 (P2.3)">
						<item label="EXINT0_0 (P0.5)" value="0" lockon="PORT_P0_DIR[5]=Input"/>
						<item label="EXINT0_1 (P1.2)" value="1" lockon="PORT_P1_DIR[2]=Input"/>
						<item label="EXINT0_2 (P2.3)" value="2" lockon="PORT_P2_DIR[3]=Input"/>
						<item label="EXINT0_3 (P0.1)" value="3" lockon="PORT_P0_DIR[1]=Input"/>
					</combo>
				</button>
				<button label="EXINT1" define="SCU_MODIEN4[0]" header="int_defines.h" lockon="CPU_NVIC_ISER[13]=1">
					<button label="Trigger Rising Edge" define="SCU_EXINT1_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[2]" header="int_defines.h"/>
						<edit label="Rising Edge Call Back" define="EXINT1_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trigger Falling Edge" define="SCU_EXINT1_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[3]" header="int_defines.h"/>
						<edit label="Falling Edge Call Back" define="EXINT1_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<combo define="SCU_MODPISEL[3:2]" header="scu_defines.h" label="Pin Select" default="EXINT1_0 (P2.1)">
						<item label="EXINT1_0 (P2.1)" value="0" lockon="PORT_P2_DIR[1]=Input"/>
						<item label="EXINT1_1 (P2.0)" value="1" lockon="PORT_P2_DIR[0]=Input"/>
						<item label="EXINT1_2 (P0.3)" value="2" lockon="PORT_P0_DIR[3]=Input"/>
						<item label="EXINT1_3 (P0.2)" value="3" lockon="PORT_P0_DIR[2]=Input"/>
					</combo>
				</button>
				<button label="EXINT2" define="SCU_MODIEN2[5]" header="int_defines.h" lockon="CPU_NVIC_ISER[11]=1">
					<button label="Trigger Rising Edge" define="SCU_EXINT2_RISING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[4]" header="int_defines.h" default="1"/>
						<edit label="Rising Edge Call Back" define="EXINT2_RISING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trigger Falling Edge" define="SCU_EXINT2_FALLING_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="SCU_EXICON0[5]" header="int_defines.h" default="1"/>
						<edit label="Falling Edge Call Back" define="EXINT2_FALLING_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<combo define="SCU_MODPISEL[5:4]" header="scu_defines.h" label="Pin Select" default="EXINT2_0 (P2.7)">
						<item label="EXINT2_0 (P2.7)" value="0" lockon="PORT_P2_DIR[7]=Input"/>
						<item label="EXINT2_1 (P1.4)" value="1" lockon="PORT_P1_DIR[4]=Input"/>
						<item label="EXINT2_2 (P0.4)" value="2" lockon="PORT_P0_DIR[4]=Input"/>
						<item label="EXINT2_3 (P0.0)" value="3" lockon="PORT_P0_DIR[0]=Input"/>
					</combo>
				</button>
			</branch>
			<branch label="Core Exceptions">
				<button label="HardFault Call Back" define="CPU_HARDFAULT_EN">
					<edit label="Call Back" define="CPU_HARDFAULT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
				<button label="SysTick Call Back" define="CPU_SYSTICK_EN">
					<edit label="Call Back" define="CPU_SYSTICK_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
				</button>
			</branch>
			<branch label="NVIC">
				<branch label="Interrupt enable">
					<button label="GPT1 enable" define="CPU_NVIC_ISER[0]" lockon="SCU_IEN0[31]=1"/>
					<button label="GPT2 enable" define="CPU_NVIC_ISER[1]" lockon="SCU_IEN0[31]=1"/>
					<button label="ADC2 enable" define="CPU_NVIC_ISER[2]" lockon="SCU_IEN0[31]=1"/>
					<button label="ADC1 enable" define="CPU_NVIC_ISER[3]" lockon="SCU_IEN0[31]=1"/>
					<button label="CCU6 SR0 enable" define="CPU_NVIC_ISER[4]" lockon="SCU_IEN0[31]=1"/>
					<button label="CCU6 SR1 enable" define="CPU_NVIC_ISER[5]" lockon="SCU_IEN0[31]=1"/>
					<button label="CCU6 SR2 enable" define="CPU_NVIC_ISER[6]" lockon="SCU_IEN0[31]=1"/>
					<button label="CCU6 SR3 enable" define="CPU_NVIC_ISER[7]" lockon="SCU_IEN0[31]=1"/>
					<button label="SSC1 enable" define="CPU_NVIC_ISER[8]" lockon="SCU_IEN0[31]=1"/>
					<button label="SSC2 enable" define="CPU_NVIC_ISER[9]" lockon="SCU_IEN0[31]=1"/>
					<button label="UART1 enable" define="CPU_NVIC_ISER[10]" lockon="SCU_IEN0[31]=1"/>
					<button label="UART2 enable" define="CPU_NVIC_ISER[11]" lockon="SCU_IEN0[31]=1"/>
					<button label="EXINT0 enable" define="CPU_NVIC_ISER[12]" lockon="SCU_IEN0[31]=1"/>
					<button label="EXINT1 enable" define="CPU_NVIC_ISER[13]" lockon="SCU_IEN0[31]=1"/>
					<button label="WAKEUP enable" define="CPU_NVIC_ISER[14]" lockon="SCU_IEN0[31]=1"/>
					<button label="LS1 enable" define="CPU_NVIC_ISER[17]" lockon="SCU_IEN0[31]=1"/>
					<button label="LS2 enable" define="CPU_NVIC_ISER[18]" lockon="SCU_IEN0[31]=1"/>
					<button label="HS1 enable" define="CPU_NVIC_ISER[19]" lockon="SCU_IEN0[31]=1"/>
					<button label="HS2 enable" define="CPU_NVIC_ISER[20]" lockon="SCU_IEN0[31]=1"/>
					<button label="DU enable" define="CPU_NVIC_ISER[21]" lockon="SCU_IEN0[31]=1"/>
					<button label="MON1-5 enable" define="CPU_NVIC_ISER[22]" lockon="SCU_IEN0[31]=1"/>
					<button label="Port2.x enable" define="CPU_NVIC_ISER[23]" lockon="SCU_IEN0[31]=1"/>
				</branch>
				<branch label="Interrupt Priority [0(highest)..3(lowest)]">
					<edit label="GPT1" define="CPU_NVIC_IPR0[7:6]" default="0"/>
					<edit label="GPT2" define="CPU_NVIC_IPR0[15:14]" default="0"/>
					<edit label="ADC2" define="CPU_NVIC_IPR0[23:22]" default="0"/>
					<edit label="ADC1" define="CPU_NVIC_IPR0[31:30]" default="0"/>
					<edit label="CCU6 SR0" define="CPU_NVIC_IPR1[7:6]" default="0"/>
					<edit label="CCU6 SR1" define="CPU_NVIC_IPR1[15:14]" default="0"/>
					<edit label="CCU6 SR2" define="CPU_NVIC_IPR1[23:22]" default="0"/>
					<edit label="CCU6 SR3" define="CPU_NVIC_IPR1[31:30]" default="0"/>
					<edit label="SSC1" define="CPU_NVIC_IPR2[7:6]" default="0"/>
					<edit label="SSC2" define="CPU_NVIC_IPR2[15:14]" default="0"/>
					<edit label="UART1" define="CPU_NVIC_IPR2[23:22]" default="0"/>
					<edit label="UART2" define="CPU_NVIC_IPR2[31:30]" default="0"/>
					<edit label="EXINT0" define="CPU_NVIC_IPR3[7:6]" default="0"/>
					<edit label="EXINT1" define="CPU_NVIC_IPR3[15:14]" default="0"/>
					<edit label="WAKEUP" define="CPU_NVIC_IPR3[23:22]" default="0"/>
					<edit label="LS1" define="CPU_NVIC_IPR4[15:14]" default="0"/>
					<edit label="LS2" define="CPU_NVIC_IPR4[23:22]" default="0"/>
					<edit label="HS1" define="CPU_NVIC_IPR4[31:30]" default="0"/>
					<edit label="HS2" define="CPU_NVIC_IPR5[7:6]" default="0"/>
					<edit label="DU" define="CPU_NVIC_IPR5[15:14]" default="0"/>
					<edit label="MON1-5" define="CPU_NVIC_IPR5[23:22]" default="0"/>
					<edit label="Port2.x" define="CPU_NVIC_IPR5[31:30]" default="0"/>
				</branch>
			</branch>
		</header>
	</module>
	<module label="PORT" desc="GPIO Ports">
		<branch label="Port0">
			<branch label="Pin0">
				<radio define="PORT_P0_DIR[0]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[0]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[0]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_0_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="T3OUT"/>
							<item label="EXF21_0"/>
							<item label="UART2_RXDO"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_0_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin1">
				<radio define="PORT_P0_DIR[1]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[1]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[1]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_1_ALT[1:0]" label="Function">
							<item label="GPIO" value="0"/>
							<item label="T6OUT_0" value="1"/>
							<item label="CC62_0" value="2"/>
							<item label="SSC12_M_SCK" value="3"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_1_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin2">
				<radio define="PORT_P0_DIR[2]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[2]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[2]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_2_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SSC12_S_MRST"/>
							<item label="UART1_TXD"/>
							<item label="EXF2_0"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_2_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin3">
				<radio define="PORT_P0_DIR[3]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[3]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[3]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_3_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SSC1_M_SCK"/>
							<item label="T6OFL"/>
							<item label="T6OUT_1"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_3_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin4">
				<radio define="PORT_P0_DIR[4]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[4]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[4]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_4_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SSC1_M_MTSR"/>
							<item label="CC60_0"/>
							<item label="CLKOUT_0"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_4_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin5">
				<radio define="PORT_P0_DIR[5]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P0_DATA[5]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_OD[5]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P0_5_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SSC1_S_MRST"/>
							<item label="COUT60_0"/>
							<item label="LIN_RXD"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P0_5_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
		</branch>
		<branch label="Port1">
			<branch label="Pin0">
				<radio define="PORT_P1_DIR[0]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[0]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[0]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_0_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SSC2_M_SCK"/>
							<item label="CC61_0"/>
							<item label="UART2_TXD"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_0_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin1">
				<radio define="PORT_P1_DIR[1]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[1]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[1]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_1_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SSC2_M_MTSR"/>
							<item label="COUT61_0"/>
							<item label="EXF21_1"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_1_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin2">
				<radio define="PORT_P1_DIR[2]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[2]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[2]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_2_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="SSC2_S_MRST"/>
							<item label="COUT63_0"/>
							<item label="T3OUT"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_2_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin4">
				<radio define="PORT_P1_DIR[4]" default="0" header="port_defines.h">
					<button label="Input">
					</button>
					<button label="Output">
						<combo header="port_defines.h" define="PORT_P1_DATA[4]" label="Data">
							<item label="Low (0)"/>
							<item label="High (1)"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_OD[4]" label="Mode">
							<item label="Push-Pull"/>
							<item label="Open-Drain"/>
						</combo>
						<combo header="port_defines.h" define="PORT_P1_4_ALT[1:0]" label="Function">
							<item label="GPIO"/>
							<item label="CLKOUT_1"/>
							<item label="COUT62_0"/>
							<item label="SSC12_M_MTSR"/>
						</combo>
					</button>
				</radio>
				<combo header="port_defines.h" define="PORT_P1_4_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
		</branch>
		<branch label="Port2">
			<branch label="Pin0">
				<combo header="port_defines.h" define="PORT_P2_DIR[0]" label="Direction">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_0_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin1">
				<combo header="port_defines.h" define="PORT_P2_DIR[1]" label="Direction">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_1_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin2">
				<combo header="port_defines.h" define="PORT_P2_DIR[2]" label="Direction">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_2_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin3">
				<combo header="port_defines.h" define="PORT_P2_DIR[3]" label="Direction">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_3_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin4">
				<combo header="port_defines.h" define="PORT_P2_DIR[4]" label="Direction">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_4_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin5">
				<combo header="port_defines.h" define="PORT_P2_DIR[5]" label="Direction" default="0">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_5_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin6">
				<combo header="port_defines.h" define="PORT_P2_DIR[6]" label="Direction">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_6_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
			<branch label="Pin7">
				<combo header="port_defines.h" define="PORT_P2_DIR[7]" label="Direction">
					<item label="Input" value="0"/>
					<item label="Disabled" value="1"/>
				</combo>
				<combo header="port_defines.h" define="PORT_P2_7_PUD[1:0]" label="Pull mode">
					<item label="None" value="0"/>
					<item label="Pull-Down" value="2"/>
					<item label="Pull-Up" value="3"/>
				</combo>
			</branch>
		</branch>
	</module>
	<module label="ADC1" desc="10bit ADC">
		<header define="adc1_defines.h">
			<button label="ADC1 enable                                 " define="ADC1_CTRL3[0]" header="adc1_defines.h">
<!--			<math label="Module Current (approx.)" unit="mA" define="DEV_ADC1_CURR" formula="ADC1_CTRL3[0]&lt;1?0:SCU_PLL_fPLL/1500"/> -->
				<math label="ADC1 Clock" unit="MHz" define="ADC1_CLK" formula="SCU_APCLK_MI_CLK"/>
				<math label="LV Channel Minimum Sample time" unit="us" formula="1/SCU_APCLK_MI_CLK*$ADC1_CTRL3[19:16]"/>
				<math label="HV Channel Minimum Sample time" unit="us" formula="1/SCU_APCLK_MI_CLK*$ADC1_CTRL3[11:8]"/>
				<branch label="Minimum Sample Time Settings">
					<combo label="LV Minimum Sample Time [ADC1_CLK ticks per Sample]" define="ADC1_CTRL3[19:16]" default="4">
						<item label="4"/>
						<item label="6"/>
						<item label="8"/>
						<item label="10"/>
						<item label="12"/>
						<item label="14"/>
						<item label="16"/>
						<item label="18"/>
						<item label="20"/>
						<item label="22"/>
					</combo>
					<combo label="HV Minimum Sample Time [ADC1_CLK ticks per Sample]" define="ADC1_CTRL3[11:8]" default="12">
						<item label="4"/>
						<item label="6"/>
						<item label="8"/>
						<item label="10"/>
						<item label="12"/>
						<item label="14"/>
						<item label="16"/>
						<item label="18"/>
						<item label="20"/>
						<item label="22"/>
					</combo>
				</branch>
				<radio define="ADC1_MODE_SELECT" default="1">
					<button label="Software Mode" lockon="ADC1_CHX_ESM[30]=0;ADC1_CHX_EIM[11]=0;ADC1_CHX_ESM[18:16]=none;ADC1_CHX_EIM[18:16]=none"/>
					<button label="Sequencer Mode">
						<branch label="Differential Mode">
							<button label="Enable DCH1" define="ADC1_DUIN_SEL[0]">
								<combo label="Result Mode" define="ADC1_DIFFCH_OUT1[16]">
									<item label="overwrite" />
									<item label="wait for read" />
								</combo>
								<combo label="Use CCU Trigger" define="SCU_MODPISEL4[2:0]" default="0">
									<item label="CC60" />
									<item label="CC61" />
									<item label="CC62" />
									<item label="COUT60" />
									<item label="COUT61" />
									<item label="COUT62" />
									<item label="T3OUT" />
									<item label="COUT63" />
								</combo>
							</button>
							<button label="Enable DCH2" define="ADC1_DUIN_SEL[8]" header="adc1_defines.h">
								<combo label="Result Mode" define="ADC1_DIFFCH_OUT2[16]">
									<item label="overwrite" />
									<item label="wait for read" />
								</combo>
								<combo label="Use CCU Trigger" define="SCU_MODPISEL4[10:8]" default="1">
									<item label="CC60" />
									<item label="CC61" />
									<item label="CC62" />
									<item label="COUT60" />
									<item label="COUT61" />
									<item label="COUT62" />
									<item label="T3OUT" />
									<item label="COUT63" />
								</combo>
							</button>
							<button label="Enable DCH3" define="ADC1_DUIN_SEL[16]" header="adc1_defines.h">
								<combo label="Result Mode" define="ADC1_DIFFCH_OUT3[16]">
									<item label="overwrite" />
									<item label="wait for read" />
								</combo>
								<combo label="Use CCU Trigger" define="SCU_MODPISEL4[18:16]" default="3">
									<item label="CC60" />
									<item label="CC61" />
									<item label="CC62" />
									<item label="COUT60" />
									<item label="COUT61" />
									<item label="COUT62" />
									<item label="T3OUT" />
									<item label="COUT63" />
								</combo>
							</button>
							<button label="Enable DCH4" define="ADC1_DUIN_SEL[24]" header="adc1_defines.h">
								<combo label="Result Mode" define="ADC1_DIFFCH_OUT4[16]">
									<item label="overwrite" />
									<item label="wait for read" />
								</combo>
								<combo label="Use CCU Trigger" define="SCU_MODPISEL4[26:24]" default="4">
									<item label="CC60" />
									<item label="CC61" />
									<item label="CC62" />
									<item label="COUT60" />
									<item label="COUT61" />
									<item label="COUT62" />
									<item label="T3OUT" />
									<item label="COUT63" />
								</combo>
							</button>
						</branch>
						<math label="NOTE: Triggers are AND-gated with COUT63. So at least Timer" define="ADC1_MSG1" formula="13"/>
						<math label="(and optionally Timer 12) MUST be configured in section CCU" define="ADC1_MSG2" formula="6"/>
						<branch label="Sequence 0" default="0">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ0_1[0]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ0_1[1]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ0_1[2]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ0_1[3]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ0_1[4]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ0_1[5]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ0_1[6]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ0_1[7]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ0_1[8]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ0_1[9]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ0_1[10]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ0_1[11]"/>
						</branch>
						<branch label="Sequence 1">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ0_1[16]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ0_1[17]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ0_1[18]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ0_1[19]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ0_1[20]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ0_1[21]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ0_1[22]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ0_1[23]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ0_1[24]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ0_1[25]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ0_1[26]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ0_1[27]"/>
						</branch>
						<branch label="Sequence 2">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ2_3[0]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ2_3[1]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ2_3[2]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ2_3[3]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ2_3[4]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ2_3[5]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ2_3[6]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ2_3[7]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ2_3[8]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ2_3[9]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ2_3[10]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ2_3[11]"/>
						</branch>
						<branch label="Sequence 3">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ2_3[16]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ2_3[17]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ2_3[18]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ2_3[19]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ2_3[20]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ2_3[21]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ2_3[22]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ2_3[23]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ2_3[24]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ2_3[25]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ2_3[26]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ2_3[27]"/>
						</branch>
						<branch label="Sequence 4">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ4_5[0]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ4_5[1]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ4_5[2]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ4_5[3]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ4_5[4]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ4_5[5]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ4_5[6]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ4_5[7]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ4_5[8]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ4_5[9]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ4_5[10]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ4_5[11]"/>
						</branch>
						<branch label="Sequence 5">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ4_5[16]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ4_5[17]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ4_5[18]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ4_5[19]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ4_5[20]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ4_5[21]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ4_5[22]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ4_5[23]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ4_5[24]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ4_5[25]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ4_5[26]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ4_5[27]"/>
						</branch>
						<branch label="Sequence 6">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ6_7[0]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ6_7[1]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ6_7[2]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ6_7[3]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ6_7[4]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ6_7[5]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ6_7[6]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ6_7[7]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ6_7[8]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ6_7[9]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ6_7[10]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ6_7[11]"/>
						</branch>
						<branch label="Sequence 7">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ6_7[16]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ6_7[17]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ6_7[18]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ6_7[19]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ6_7[20]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ6_7[21]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ6_7[22]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ6_7[23]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ6_7[24]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ6_7[25]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ6_7[26]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ6_7[27]"/>
						</branch>
						<branch label="Sequence 8">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ8_9[0]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ8_9[1]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ8_9[2]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ8_9[3]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ8_9[4]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ8_9[5]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ8_9[6]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ8_9[7]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ8_9[8]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ8_9[9]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ8_9[10]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ8_9[11]"/>
						</branch>
						<branch label="Sequence 9">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ8_9[16]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ8_9[17]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ8_9[18]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ8_9[19]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ8_9[20]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ8_9[21]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ8_9[22]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ8_9[23]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ8_9[24]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ8_9[25]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ8_9[26]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ8_9[27]"/>
						</branch>
						<branch label="Sequence 10">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ10_11[0]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ10_11[1]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ10_11[2]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ10_11[3]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ10_11[4]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ10_11[5]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ10_11[6]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ10_11[7]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ10_11[8]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ10_11[9]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ10_11[10]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ10_11[11]"/>
						</branch>
						<branch label="Sequence 11">
							<button label="Channel 0 (VBAT_SENSE)" define="ADC1_SQ10_11[16]"/>
							<button label="Channel 1 (VS)" define="ADC1_SQ10_11[17]"/>
							<button label="Channel 2 (MON1/DCH1/DCH2)" define="ADC1_SQ10_11[18]"/>
							<button label="Channel 3 (MON2/DCH1/DCH3)" define="ADC1_SQ10_11[19]"/>
							<button label="Channel 4 (MON3/DCH2/DCH4)" define="ADC1_SQ10_11[20]"/>
							<button label="Channel 5 (MON4/DCH3/DCH4)" define="ADC1_SQ10_11[21]"/>
							<button label="Channel 6 (MON5*)" define="ADC1_SQ10_11[22]"/>
							<button label="Channel 7 (P2.1)" define="ADC1_SQ10_11[23]"/>
							<button label="Channel 8 (P2.2)" define="ADC1_SQ10_11[24]"/>
							<button label="Channel 9 (P2.3)" define="ADC1_SQ10_11[25]"/>
							<button label="Channel 10 (P2.6)" define="ADC1_SQ10_11[26]"/>
							<button label="Channel 11 (P2.7)" define="ADC1_SQ10_11[27]"/>
						</branch>
					</button>
				</radio>
				<math define="ADC1_CTRL3[1]" formula="ADC1_MODE_SELECT&lt;1?1:0"/>
				<button label="Channel Configuration" define="SWM_SM_CHANNELS" header="adc1_defines.h" > 
					<branch label="Channel 0 - VBAT_SENSE">
						<button label="Filter" define="ADC1_CTRL5[0]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[0]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[0]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[1:0]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT0[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[0]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH0_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH0_UPTH_VOLT" range="0.5;25.6" default="24.0"/>
								<math label="Upper Threshold value" define="ADC1_TH0_3_UPPER[7:0]" formula="trunc(ADC1_CH0_UPTH_VOLT*0.048*255/1.227)"/>
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[5]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC1_CH0_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH0_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH0_LOTH_VOLT" range="0.5;25.6" default="6.4"/>
								<math label="Lower Threshold value" define="ADC1_TH0_3_LOWER[7:0]" formula="trunc(ADC1_CH0_LOTH_VOLT*0.048*255/1.227)"/>
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[0]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC1_CH0_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 1 - VS">
						<button label="Filter" define="ADC1_CTRL5[1]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[1]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[1]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[3:2]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT1[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[1]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH1_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH1_UPTH_VOLT" range="3.0;25.6" default="24.0"/>
								<math label="Upper Threshold value" define="ADC1_TH0_3_UPPER[15:8]" formula="trunc(ADC1_CH1_UPTH_VOLT*0.048*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[17]"/>
								<edit label="Call Back" define="ADC1_CH1_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH1_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH1_LOTH_VOLT" range="3.0;25.6" default="6.4"/>
								<math label="Lower Threshold value" define="ADC1_TH0_3_LOWER[15:8]" formula="trunc(ADC1_CH1_LOTH_VOLT*0.048*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[1]"/>
								<edit label="Call Back" define="ADC1_CH1_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 2 - MON1">
						<button label="Filter" define="ADC1_CTRL5[2]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[2]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[2]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[5:4]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT2[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[2]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH2_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH2_UPTH_VOLT" range="0.0;30.6" default="8.1"/>
								<math label="Upper Threshold value" define="ADC1_TH0_3_UPPER[23:16]" formula="trunc(ADC1_CH2_UPTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[18]"/>
								<edit label="Call Back" define="ADC1_CH2_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH2_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH2_LOTH_VOLT" range="0.0;30.6" default="5.4"/>
								<math label="Lower Threshold value" define="ADC1_TH0_3_LOWER[23:16]" formula="trunc(ADC1_CH2_LOTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[2]"/>
								<edit label="Call Back" define="ADC1_CH2_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 3 - MON2">
						<button label="Filter" define="ADC1_CTRL5[3]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[3]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[3]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[7:6]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT3[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[3]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH3_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH3_UPTH_VOLT" range="0.0;30.6" default="8.1"/>
								<math label="Upper Threshold value" define="ADC1_TH0_3_UPPER[31:24]" formula="trunc(ADC1_CH3_UPTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[19]"/>
								<edit label="Call Back" define="ADC1_CH3_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH3_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH3_LOTH_VOLT" range="0.0;30.6" default="5.4"/>
								<math label="Lower Threshold value" define="ADC1_TH0_3_LOWER[31:24]" formula="trunc(ADC1_CH3_LOTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[3]"/>
								<edit label="Call Back" define="ADC1_CH3_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 4 - MON3">
						<button label="Filter" define="ADC1_CTRL5[4]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[4]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[4]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[9:8]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT4[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[4]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH4_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH4_UPTH_VOLT" range="0.0;30.6" default="8.1"/>
								<math label="Upper Threshold value" define="ADC1_TH4_7_UPPER[7:0]" formula="trunc(ADC1_CH4_UPTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[20]"/>
								<edit label="Call Back" define="ADC1_CH4_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH4_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH4_LOTH_VOLT" range="0.0;30.6" default="5.4"/>
								<math label="Lower Threshold value" define="ADC1_TH4_7_LOWER[7:0]" formula="trunc(ADC1_CH4_LOTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[4]"/>
								<edit label="Call Back" define="ADC1_CH4_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 5 - MON4">
						<button label="Filter" define="ADC1_CTRL5[5]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[5]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[5]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[11:10]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT5[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[5]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH5_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH5_UPTH_VOLT" range="0.0;30.6" default="8.1"/>
								<math label="Upper Threshold value" define="ADC1_TH4_7_UPPER[15:8]" formula="trunc(ADC1_CH5_UPTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[21]"/>
								<edit label="Call Back" define="ADC1_CH5_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH5_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH5_LOTH_VOLT" range="0.0;30.6" default="5.4"/>
								<math label="Lower Threshold value" define="ADC1_TH4_7_LOWER[15:8]" formula="trunc(ADC1_CH5_LOTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[5]"/>
								<edit label="Call Back" define="ADC1_CH5_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 6 - MON5*">
						<button label="Filter" define="ADC1_CTRL5[6]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[6]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[6]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[13:12]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT6[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[6]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH6_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH6_UPTH_VOLT" range="0.0;30.6" default="8.1"/>
								<math label="Upper Threshold value" define="ADC1_TH4_7_UPPER[23:16]" formula="trunc(ADC1_CH6_UPTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[22]"/>
								<edit label="Call Back" define="ADC1_CH6_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH6_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[22]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH6_LOTH_VOLT" range="0.0;30.6" default="5.4"/>
								<math label="Lower Threshold value" define="ADC1_TH4_7_LOWER[23:16]" formula="trunc(ADC1_CH6_LOTH_VOLT*0.040*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[6]"/>
								<edit label="Call Back" define="ADC1_CH6_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 7 - P2.1">
						<button label="Filter" define="ADC1_CTRL5[7]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[7]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[7]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[15:14]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT7[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[7]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH7_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH7_UPTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Upper Threshold value" define="ADC1_TH4_7_UPPER[31:24]" formula="trunc(ADC1_CH7_UPTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[23]"/>
								<edit label="Call Back" define="ADC1_CH7_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH7_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH7_LOTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Lower Threshold value" define="ADC1_TH4_7_LOWER[31:24]" formula="trunc(ADC1_CH7_LOTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[7]"/>
								<edit label="Call Back" define="ADC1_CH7_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 8 - P2.2">
						<button label="Filter" define="ADC1_CTRL5[8]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[8]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[8]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[17:16]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT8[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[8]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH8_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH8_UPTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Upper Threshold value" define="ADC1_TH8_11_UPPER[7:0]" formula="trunc(ADC1_CH8_UPTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[24]"/>
								<edit label="Call Back" define="ADC1_CH8_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH8_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH8_LOTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Lower Threshold value" define="ADC1_TH8_11_LOWER[7:0]" formula="trunc(ADC1_CH8_LOTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[8]"/>
								<edit label="Call Back" define="ADC1_CH8_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 9 - P2.3">
						<button label="Filter" define="ADC1_CTRL5[9]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[9]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[9]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[19:18]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT9[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[9]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH9_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH9_UPTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Upper Threshold value" define="ADC1_TH8_11_UPPER[15:8]" formula="trunc(ADC1_CH9_UPTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[25]"/>
								<edit label="Call Back" define="ADC1_CH9_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH9_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH9_LOTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Lower Threshold value" define="ADC1_TH8_11_LOWER[15:8]" formula="trunc(ADC1_CH9_LOTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[9]"/>
								<edit label="Call Back" define="ADC1_CH9_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 10 - P2.6">
						<button label="Filter" define="ADC1_CTRL5[10]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[10]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[10]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[21:20]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT10[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[10]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH10_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH10_UPTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Upper Threshold value" define="ADC1_TH8_11_UPPER[23:16]" formula="trunc(ADC1_CH10_UPTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[26]"/>
								<edit label="Call Back" define="ADC1_CH10_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH10_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH10_LOTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Lower Threshold value" define="ADC1_TH8_11_LOWER[23:16]" formula="trunc(ADC1_CH10_LOTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[10]"/>
								<edit label="Call Back" define="ADC1_CH10_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 11 - P2.7">
						<button label="Filter" define="ADC1_CTRL5[11]">
							<button label="Upper Threshold Filter" define="ADC1_FILT_UP_CTRL[11]"/>
							<button label="Lower Threshold Filter" define="ADC1_FILT_LO_CTRL[11]"/>
							<combo label="Coefficient" define="ADC1_FILTCOEFF0_11[23:22]">
								<item label="1/2 weight of current sample"/>
								<item label="1/4 weight of current sample"/>
								<item label="1/8 weight of current sample"/>
								<item label="1/16 weight of current sample"/>
							</combo>
							<combo label="Result Mode" define="ADC1_FILT_OUT11[16]" header="adc1_defines.h">
								<item label="overwrite" />
								<item label="wait for read" />
							</combo>
						</button>
						<button label="Calibration enable" define="ADC1_CTRL2[11]"/>
						<branch label="Interrupt (Postprocessing)">
							<button label="Upper Threshold" define="ADC1_CH11_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Upper Threshold [V]" define="ADC1_CH11_UPTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Upper Threshold value" define="ADC1_TH8_11_UPPER[31:24]" formula="trunc(ADC1_CH11_UPTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[27]"/>
								<edit label="Call Back" define="ADC1_CH11_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC1_CH11_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[23]=1">
								<edit label="Lower Threshold [V]" define="ADC1_CH11_LOTH_VOLT" range="0.0;5.0" default="2.5"/>
								<math label="Lower Threshold value" define="ADC1_TH8_11_LOWER[31:24]" formula="trunc(ADC1_CH11_LOTH_VOLT*0.223*255/1.227)"/>
								<button label="Enable Interrupt" define="ADC1_IRQEN_2[11]"/>
								<edit label="Call Back" define="ADC1_CH11_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 12 - P2.0 (has no post-processing)">
					</branch>
					<branch label="DCH1 (MON1-MON2)">
							<branch label="Interrupt (Postprocessing)">
								<button label="Upper Threshold" define="ADC1_DCH1_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Upper Threshold [V]" define="ADC1_DCH1_UPTH_VOLT" range="3.0;25.6" default="8.1"/>
									<math label="Upper Threshold value" define="ADC1_DCHTH1_4_UPPER[7:0]" formula="trunc(ADC1_DCH1_UPTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[25]"/>
									<edit label="Call Back" define="ADC1_DCH1_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
								<button label="Lower Threshold" define="ADC1_DCH1_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Lower Threshold [V]" define="ADC1_DCH1_LOTH_VOLT" range="3.0;25.6" default="5.4"/>
									<math label="Lower Threshold value" define="ADC1_DCHTH1_4_LOWER[7:0]" formula="trunc(ADC1_DCH1_LOTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[24]"/>
									<edit label="Call Back" define="ADC1_DCH1_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
							</branch>
					</branch>
					<branch label="DCH2 (MON1-MON3)">
							<branch label="Interrupt (Postprocessing)">
								<button label="Upper Threshold" define="ADC1_DCH2_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Upper Threshold [V]" define="ADC1_DCH2_UPTH_VOLT" range="3.0;25.6" default="8.1"/>
									<math label="Upper Threshold value" define="ADC1_DCHTH1_4_UPPER[15:8]" formula="trunc(ADC1_DCH2_UPTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[27]"/>
									<edit label="Call Back" define="ADC1_DCH2_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
								<button label="Lower Threshold" define="ADC1_DCH2_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Lower Threshold [V]" define="ADC1_DCH2_LOTH_VOLT" range="3.0;25.6" default="5.4"/>
									<math label="Lower Threshold value" define="ADC1_DCHTH1_4_LOWER[15:8]" formula="trunc(ADC1_DCH2_LOTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[26]"/>
									<edit label="Call Back" define="ADC1_DCH2_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
							</branch>
					</branch>
					<branch label="DCH3 (MON2-MON4)">
							<branch label="Interrupt (Postprocessing)">
								<button label="Upper Threshold" define="ADC1_DCH3_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Upper Threshold [V]" define="ADC1_DCH3_UPTH_VOLT" range="3.0;25.6" default="8.1"/>
									<math label="Upper Threshold value" define="ADC1_DCHTH1_4_UPPER[23:16]" formula="trunc(ADC1_DCH3_UPTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[29]"/>
									<edit label="Call Back" define="ADC1_DCH3_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
								<button label="Lower Threshold" define="ADC1_DCH3_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Lower Threshold [V]" define="ADC1_DCH3_LOTH_VOLT" range="3.0;25.6" default="5.4"/>
									<math label="Lower Threshold value" define="ADC1_DCHTH1_4_LOWER[23:16]" formula="trunc(ADC1_DCH3_LOTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[28]"/>
									<edit label="Call Back" define="ADC1_DCH3_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
							</branch>
					</branch>
					<branch label="DCH4 (MON3-MON4)">
							<branch label="Interrupt (Postprocessing)">
								<button label="Upper Threshold" define="ADC1_DCH4_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Upper Threshold [V]" define="ADC1_DCH4_UPTH_VOLT" range="3.0;25.6" default="8.1"/>
									<math label="Upper Threshold value" define="ADC1_DCHTH1_4_UPPER[31:24]" formula="trunc(ADC1_DCH4_UPTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[31]"/>
									<edit label="Call Back" define="ADC1_DCH4_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
								<button label="Lower Threshold" define="ADC1_DCH4_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[21]=1">
									<edit label="Lower Threshold [V]" define="ADC1_DCH4_LOTH_VOLT" range="3.0;25.6" default="5.4"/>
									<math label="Lower Threshold value" define="ADC1_DCHTH1_4_LOWER[31:24]" formula="trunc(ADC1_DCH4_LOTH_VOLT*0.040*255/1.227)"/>
									<button label="Enable Interrupt" define="ADC1_IRQEN_1[30]"/>
									<edit label="Call Back" define="ADC1_DCH4_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
								</button>
							</branch>
					</branch>
				</button>
				<button label="Emergency Sequencer Mode - ESM enable" define="ADC1_CHX_ESM[30]">
					<combo label="Trigger" define="ADC1_CHX_ESM[18:16]" default="none">
						<item label="none" />
						<item label="CCU6 COUT63" />
						<item label="GPT12E T6OUT" />
						<item label="GPT12E T3OUT" />
						<item label="Timer2" />
						<item label="Timer21" />
					</combo>
					<branch label="ESM Sequence">
						<button label="Channel 0 (VBAT_SENSE)" define="ADC1_CHX_ESM[0]"/>
						<button label="Channel 1 (VS)" define="ADC1_CHX_ESM[1]" />
						<button label="Channel 2 (MON1)" define="ADC1_CHX_ESM[2]" />
						<button label="Channel 3 (MON2)" define="ADC1_CHX_ESM[3]" />
						<button label="Channel 4 (MON3)" define="ADC1_CHX_ESM[4]" />
						<button label="Channel 5 (MON4)" define="ADC1_CHX_ESM[5]" />
						<button label="Channel 6 (MON5*)" define="ADC1_CHX_ESM[6]" />
						<button label="Channel 7 (P2.1)" define="ADC1_CHX_ESM[7]" />
						<button label="Channel 8 (P2.2)" define="ADC1_CHX_ESM[8]" />
						<button label="Channel 9 (P2.3)" define="ADC1_CHX_ESM[9]" />
						<button label="Channel 10 (P2.6)" define="ADC1_CHX_ESM[10]" />
						<button label="Channel 11 (P2.7)" define="ADC1_CHX_ESM[11]" />
					</branch>
				</button>
				<button label="Emergency Interrupt Mode - EIM enable" define="ADC1_CHX_EIM[11]">
					<combo label="Trigger" define="ADC1_CHX_EIM[18:16]" default="none">
						<item label="none" />
						<item label="CCU6 COUT63" />
						<item label="GPT12E T6OUT" />
						<item label="GPT12E T3OUT" />
						<item label="Timer2" />
						<item label="Timer21" />
					</combo>
					<combo label="Channel" define="ADC1_CHX_EIM[3:0]" default="Channel 0 (VBAT_SENSE)">
						<item label="Channel 0 (VBAT_SENSE)"/>
						<item label="Channel 1 (VS)" />
						<item label="Channel 2 (MON1)" />
						<item label="Channel 3 (MON2)" />
						<item label="Channel 4 (MON3)" />
						<item label="Channel 5 (MON4)" />
						<item label="Channel 6 (MON5*)" />
						<item label="Channel 7 (P2.1)" />
						<item label="Channel 8 (P2.2)" />
						<item label="Channel 9 (P2.3)" />
						<item label="Channel 10 (P2.6)" />
						<item label="Channel 11 (P2.7)" />
					</combo>
					<combo label="Repetitive Measurements" define="ADC1_CHX_EIM[10:8]" default="1">
						<item label="1" />
						<item label="2" />
						<item label="4" />
						<item label="8" />
						<item label="16" />
						<item label="32" />
						<item label="64" />
						<item label="128" />
					</combo>
				</button>
				<branch label="Interrupts (Conversion done)">
					<button label="Channel 0 (VBAT_SENSE)" define="ADC1_CH0_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[0]"/>
						<edit label="Call Back" define="ADC1_CH0_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 1 (VS)" define="ADC1_CH1_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[1]"/>
						<edit label="Call Back" define="ADC1_CH1_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 2 (MON1)" define="ADC1_CH2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[2]"/>
						<edit label="Call Back" define="ADC1_CH2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 3 (MON2)" define="ADC1_CH3_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[3]"/>
						<edit label="Call Back" define="ADC1_CH3_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 4 (MON3)" define="ADC1_CH4_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[4]"/>
						<edit label="Call Back" define="ADC1_CH4_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 5 (MON4)" define="ADC1_CH5_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[5]"/>
						<edit label="Call Back" define="ADC1_CH5_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 6 (MON5*)" define="ADC1_CH6_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
 						<button label="Enable Interrupt" define="ADC1_IRQEN_1[6]"/>
   					<edit label="Call Back" define="ADC1_CH6_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 7 (P2.1)" define="ADC1_CH7_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[7]"/>
						<edit label="Call Back" define="ADC1_CH7_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 8 (P2.2)" define="ADC1_CH8_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[8]"/>
						<edit label="Call Back" define="ADC1_CH8_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 9 (P2.3)" define="ADC1_CH9_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[9]"/>
						<edit label="Call Back" define="ADC1_CH9_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 10 (P2.6)" define="ADC1_CH10_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[10]"/>
						<edit label="Call Back" define="ADC1_CH10_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 11 (P2.7)" define="ADC1_CH11_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[11]"/>
						<edit label="Call Back" define="ADC1_CH11_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Channel 12 (P2.0)" define="ADC1_CH12_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[12]"/>
						<edit label="Call Back" define="ADC1_CH12_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="EIM" define="ADC1_EIM_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[16]"/>
						<edit label="Call Back" define="ADC1_EIM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="ESM" define="ADC1_ESM_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[3]=1">
						<button label="Enable Interrupt" define="ADC1_IRQEN_1[17]"/>
						<edit label="Call Back" define="ADC1_ESM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</button>
		</header>
	</module>
	<module label="ADC2" desc="8bit ADC">
		<header define="adc2_defines.h">
			<button label="ADC2 enable (calibrated)" define="ADC2_CTRL2[0]" lockon="ADC2_CH0_LOTH_VOLT=4.6;ADC2_CH2_LOTH_VOLT=2.64;ADC2_CH3_LOTH_VOLT=1.001;ADC2_CH4_UPTH_VOLT=1.600;ADC2_CH4_LOTH_VOLT=1.355;ADC2_CH5_UPTH_DEG=182;ADC2_CH6_UPTH_DEG=182">
<!--			<math label="Module Current (approx.)" unit="mA" define="DEV_ADC2_CURR" formula="ADC2_CTRL2[0]&lt;1?0:0.4"/> -->
				<math label="ADC2 Clock" unit="MHz" define="ADC2_CLK" formula="SCU_APCLK_MI_CLK"/>
				<math label="Single Channel Conversion time  " unit="us" formula="1/SCU_APCLK_MI_CLK*$ADC2_CTRL2[11:8]"/>
				<branch label="Clock Configuration">
					<combo label="Sample Time [MI_Clock ticks]" define="ADC2_CTRL2[11:8]" default="12">
						<item label="4"/>
						<item label="6"/>
						<item label="8"/>
						<item label="10"/>
						<item label="12"/>
						<item label="14"/>
						<item label="16"/>
						<item label="18"/>
						<item label="20"/>
						<item label="22"/>
					</combo>
				</branch>
				<branch label="Channel Configuration">
					<branch label="Channel 0 - VS">
						<edit label="Upper Threshold [V]" define="ADC2_CH0_UPTH_VOLT" range="3.0;28.2" default="28.2"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH0_LOTH_VOLT" range="3.0;28.2" default="4.6"/>
						<math label="Upper Threshold value" define="ADC2_TH0_3_UPPER[7:0]" formula="trunc(ADC2_CH0_UPTH_VOLT*0.039*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH0_3_LOWER[7:0]" formula="trunc(ADC2_CH0_LOTH_VOLT*0.039*255/1.227)"/>
						<button label="Filter" define="ADC2_CTRL4[0]" default="1">
							<button label="Upper Threshold Filter" define="ADC2_FILT_UP_CTRL[0]" default="1"/>
							<button label="Lower Threshold Filter" define="ADC2_FILT_LO_CTRL[0]" default="1"/>
						</button>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VS_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[6]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VS_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VS_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[1]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VS_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 1 - VDDEXT">
						<edit label="Upper Threshold [V]" define="ADC2_CH1_UPTH_VOLT" range="3.0;6.0" default="5.50"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH1_LOTH_VOLT" range="3.0;6.0" default="4.51"/>
						<math label="Upper Threshold value" define="ADC2_TH0_3_UPPER[15:8]" formula="trunc(ADC2_CH1_UPTH_VOLT*0.204*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH0_3_LOWER[15:8]" formula="trunc(ADC2_CH1_LOTH_VOLT*0.204*255/1.227)"/>
						<button label="Filter enable" define="ADC2_CTRL4[1]" default="1">
							<button label="Upper Threshold Filter" define="ADC2_FILT_UP_CTRL[1]" default="1"/>
							<button label="Lower Threshold Filter" define="ADC2_FILT_LO_CTRL[1]" default="1"/>
						</button>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VDDEXT_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[9]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VDDEXT_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VDDEXT_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[4]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VDDEXT_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 2 - VDDP">
						<edit label="Upper Threshold [V]" define="ADC2_CH2_UPTH_VOLT" range="3.0;6.0" default="5.5"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH2_LOTH_VOLT" range="2.6;6.0" default="2.64"/>
						<math label="Upper Threshold value" define="ADC2_TH0_3_UPPER[23:16]" formula="trunc(ADC2_CH2_UPTH_VOLT*0.204*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH0_3_LOWER[23:16]" formula="trunc(ADC2_CH2_LOTH_VOLT*0.204*255/1.227)"/>
						<button label="Filter enable" define="ADC2_CTRL4[2]" default="1">
							<button label="Upper Threshold Filter" define="ADC2_FILT_UP_CTRL[2]" default="1"/>
							<button label="Lower Threshold Filter" define="ADC2_FILT_LO_CTRL[2]" default="1"/>
						</button>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VDDP_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[7]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VDDP_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VDDP_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[2]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VDDP_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 3 - VBG !do not change!">
						<edit label="Upper Threshold [V]" define="ADC2_CH3_UPTH_VOLT" range="1.0;1.62" default="1.50"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH3_LOTH_VOLT" range="0.9;1.62" default="1.00"/>
						<math label="Upper Threshold value" define="ADC2_TH0_3_UPPER[31:24]" formula="trunc(ADC2_CH3_UPTH_VOLT*0.755*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH0_3_LOWER[31:24]" formula="trunc(ADC2_CH3_LOTH_VOLT*0.755*255/1.227)"/>
						<button label="Filter enable" define="ADC2_CTRL4[3]" default="1">
							<button label="Upper Threshold Filter" define="ADC2_FILT_UP_CTRL[3]" default="1"/>
							<button label="Lower Threshold Filter" define="ADC2_FILT_LO_CTRL[3]" default="1"/>
						</button>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VBG_UP_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[2]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_IRQ_CTRL[11]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VBG_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VBG_LO_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[2]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_IRQ_CTRL[10]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VBG_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 4 - VDDC">
						<edit label="Upper Threshold [V]" define="ADC2_CH4_UPTH_VOLT" range="1.0;1.62" default="1.60"/>
						<edit label="Lower Threshold [V]" define="ADC2_CH4_LOTH_VOLT" range="1.0;1.62" default="1.365"/>
						<math label="Upper Threshold value" define="ADC2_TH4_7_UPPER[7:0]" formula="trunc(ADC2_CH4_UPTH_VOLT*0.755*255/1.227)"/>
						<math label="Lower Threshold value" define="ADC2_TH4_7_LOWER[7:0]" formula="trunc(ADC2_CH4_LOTH_VOLT*0.755*255/1.227)"/>
						<button label="Filter enable" define="ADC2_CTRL4[4]" default="1">
							<button label="Upper Threshold Filter" define="ADC2_FILT_UP_CTRL[4]" default="1"/>
							<button label="Lower Threshold Filter" define="ADC2_FILT_LO_CTRL[4]" default="1"/>
						</button>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_VDDC_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[8]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VDDC_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Lower Threshold" define="ADC2_VDDC_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[7]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_SUPPLY_IRQ_CTRL[3]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_VDDC_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
					<branch label="Channel 5 - Temperature Sensor 1 (LS)">
						<edit label="Upper Threshold [C]" define="ADC2_CH5_UPTH_DEG" range="-40;240" default="182"/>
						<edit label="Prewarning Threshold [C]" define="ADC2_CH5_LOTH_DEG" range="-40;240" default="152"/>
						<math label="Upper Threshold value" define="ADC2_TH4_7_UPPER[15:8]" formula="trunc(ADC2_CH5_UPTH_DEG*0.482+139)"/><!-- Scaling ok? -->
						<math label="Prewarning Threshold value" define="ADC2_TH4_7_LOWER[15:8]" formula="trunc(ADC2_CH5_LOTH_DEG*0.482+139)"/><!-- Scaling ok? -->
						<button label="Filter enable" define="ADC2_CTRL4[5]" default="1">
							<button label="Upper Threshold Filter" define="ADC2_FILT_UP_CTRL[5]" default="1"/>
							<button label="Lower Threshold Filter" define="ADC2_FILT_LO_CTRL[5]" default="1"/>
						</button>
					</branch>
					<branch label="Channel 6 - Temperature Sensor 2 (System)">
						<edit label="Upper Threshold [C]" define="ADC2_CH6_UPTH_DEG" range="-40;240" default="182"/>
						<edit label="Prewarning Threshold [C]" define="ADC2_CH6_LOTH_DEG" range="-40;240" default="128"/>
						<math label="Upper Threshold value" define="ADC2_TH4_7_UPPER[23:16]" formula="trunc(ADC2_CH6_UPTH_DEG*0.482+139)"/>
						<math label="Prewarning Threshold value" define="ADC2_TH4_7_LOWER[23:16]" formula="trunc(ADC2_CH6_LOTH_DEG*0.482+139)"/>
						<button label="Filter enable" define="ADC2_CTRL4[6]" default="1">
							<button label="Upper Threshold Filter" define="ADC2_FILT_UP_CTRL[6]" default="1"/>
							<button label="Lower Threshold Filter" define="ADC2_FILT_LO_CTRL[6]" default="1"/>
						</button>
						<branch label="Interrupt">
							<button label="Upper Threshold" define="ADC2_SYS_TEMP_UP_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[3]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_IRQ_CTRL[9]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_SYS_TEMP_UP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
							<button label="Prewarning Threshold" define="ADC2_SYS_TEMP_LO_INT_EN" header="isr_defines.h" lockon="SCU_NMICON[3]=1">
								<button label="Enable Interrupt" define="SCUPM_SYS_IRQ_CTRL[8]" header="int_defines.h"/>
								<edit label="Call Back" define="ADC2_SYS_TEMP_LO_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
							</button>
						</branch>
					</branch>
				</branch>
			</button>
		</header>
	</module>
	<module label="HS" desc="High Side Switch">
		<header define="hs_defines.h">
			<button label="HS1 enable" define="HS_CTRL[0]">
				<branch label="Driver Settings">
					<combo label="Overcurrent Threshold Selection" define="HS_CTRL[13:12]" default="25 mA min.">
						<item label="25 mA min."/>
						<item label="50 mA min."/>
						<item label="100 mA min."/>
						<item label="150 mA min."/>
					</combo>
					<combo label="Slew rate" define="HS_CTRL[8]" default="10 V/µs">
						<item label="10 V/µs"/>
						<item label="30 V/µs"/>
					</combo>
					<button label="Cyclic-ON Driver" define="HS_CTRL[7]"/>
					<button label="Open Load Detection" define="HS_CTRL[3]"/>
					<button label="High Side Driver ON" define="HS_CTRL[2]"/>
					<button label="PWM Enable" define="HS_CTRL[1]"/>
				</branch>
				<branch label="Blanking Time Filter Settings">
					<combo label="Filter Time for OC/OT detection" define="HS_HS1_TRIM[9:8]" default="32 µs Filter time">
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
						<item label="32 µs Filter time"/>
					</combo>
					<combo label="Filter Time for OL detection" define="HS_HS1_TRIM[1:0]" default="16 µs Filter time">
						<item label="2 µs Filter time"/>
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
					</combo>
				</branch>
				<branch label="Source Select (PWM Output)">
					<combo label="PWM Source Selection" define="HS_PWMSRCSEL[5:3]" default="CCU6 CC60">
						<item label="CCU6 CC60"/>
						<item label="CCU6 CC61"/>
						<item label="CCU6 CC62"/>
						<item label="CCU6 COUT60"/>
						<item label="CCU6 COUT61"/>
						<item label="CCU6 COUT62"/>
						<item label="GPT12 T3OUT"/>
					</combo>
				</branch>
				<branch label="Interrupt">
					<button label="Overcurrent (OC)" define="HS1_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[19]=1">
						<button label="Enable Interrupt" define="HS_IRQEN[7]"/>
						<edit label="Call Back" define="HS1_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Open Load (OL)" define="HS1_OL_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[19]=1">
 						<button label="Enable Interrupt" define="HS_IRQEN[6]"/>
						<edit label="Call Back" define="HS1_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overtemperature (OT)" define="HS1_OT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[19]=1">
						<button label="Enable Interrupt" define="HS_IRQEN[5]"/>
						<edit label="Call Back" define="HS1_OT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</button>
			<button label="HS2 enable" define="HS_CTRL[16]" default="0">
				<branch label="Driver Settings">
					<combo label="Overcurrent Threshold Selection" define="HS_CTRL[29:28]" default="25 mA min.">
						<item label="25 mA min."/>
						<item label="50 mA min."/>
						<item label="100 mA min."/>
						<item label="150 mA min."/>
					</combo>
					<combo label="Slew rate" define="HS_CTRL[24]" default="10 V/µs">
						<item label="10 V/µs"/>
						<item label="30 V/µs"/>
					</combo>
					<button label="Cyclic-ON Driver" define="HS_CTRL[23]"/>
					<button label="Open Load Detection" define="HS_CTRL[19]"/>
					<button label="High Side Driver ON" define="HS_CTRL[18]"/>
					<button label="PWM Enable" define="HS_CTRL[17]"/>
				</branch>
				<branch label="Blanking Time Filter Settings">
					<combo label="Filter Time for OC/OT detection" define="HS_HS2_TRIM[9:8]" default="32 µs Filter time">
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
						<item label="32 µs Filter time"/>
					</combo>
					<combo label="Filter Time for OL detection" define="HS_HS2_TRIM[1:0]" default="16 µs Filter time">
						<item label="2 µs Filter time"/>
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
					</combo>
				</branch>
				<branch label="Source Select (PWM Output)">
					<combo label="PWM Source Selection" define="HS_PWMSRCSEL[2:0]" default="CCU6 CC60">
						<item label="CCU6 CC60"/>
						<item label="CCU6 CC61"/>
						<item label="CCU6 CC62"/>
						<item label="CCU6 COUT60"/>
						<item label="CCU6 COUT61"/>
						<item label="CCU6 COUT62"/>
						<item label="GPT12 T3OUT"/>
					</combo>
				</branch>
				<branch label="Interrupt">
					<button label="Overcurrent (OC)" define="HS2_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[20]=1">
						<button label="Enable Interrupt" define="HS_IRQEN[23]"/>
						<edit label="Call Back" define="HS2_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Open Load (OL)" define="HS2_OL_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[20]=1">
 						<button label="Enable Interrupt" define="HS_IRQEN[22]"/>
						<edit label="Call Back" define="HS2_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overtemperature (OT)" define="HS2_OT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[20]=1">
						<button label="Enable Interrupt" define="HS_IRQEN[21]"/>
						<edit label="Call Back" define="HS2_OT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</button>
		</header>
	</module>
	<module label="LS" desc="Low Side Switch">
		<header define="ls_defines.h">
			<button label="LS1 enable" define="LS_CTRL[0]">
				<branch label="Driver Settings">
					<combo label="Slew rate" define="LS_CTRL[8]" default="slow">
						<item label="slow"/>
						<item label="fast"/>
					</combo>
					<button label="Open Load Detection" define="LS_CTRL[3]"/>
					<button label="Low Side Driver ON" define="LS_CTRL[2]"/>
					<button label="PWM Enable" define="LS_CTRL[1]"/>
				</branch>
				<branch label="Blanking Time Filter Settings">
					<combo label="Filter Time for OC detection" define="LS_LS1_TRIM[9:8]" default="32 µs Filter time">
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
						<item label="32 µs Filter time"/>
					</combo>
					<combo label="Filter Time for OL detection" define="LS_LS1_TRIM[1:0]" default="32 µs Filter time">
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
						<item label="32 µs Filter time"/>
					</combo>
				</branch>
				<branch label="Source Select (PWM Output)">
					<combo label="PWM Source Selection" define="LS_PWMSRCSEL[5:3]" default="CCU6 CC60">
						<item label="CCU6 CC60"/>
						<item label="CCU6 CC61"/>
						<item label="CCU6 CC62"/>
						<item label="CCU6 COUT60"/>
						<item label="CCU6 COUT61"/>
						<item label="CCU6 COUT62"/>
						<item label="GPT12 T3OUT"/>
					</combo>
				</branch>
				<branch label="Interrupt">
					<button label="Overcurrent (OC)" define="LS1_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[17]=1">
						<button label="Enable Interrupt" define="LS_IRQEN[7]"/>
						<edit label="Call Back" define="LS1_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Open Load (OL)" define="LS1_OL_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[17]=1">
 						<button label="Enable Interrupt" define="LS_IRQEN[6]"/>
						<edit label="Call Back" define="LS1_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overtemperature (OT)" define="LS1_OT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[17]=1">
						<button label="Enable Interrupt" define="LS_IRQEN[5]"/>
						<edit label="Call Back" define="LS1_OT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</button>
			<button label="LS2 enable" define="LS_CTRL[16]">
				<branch label="Driver Settings">
					<combo label="Slew rate" define="LS_CTRL[24]" default="slow">
						<item label="slow"/>
						<item label="fast"/>
					</combo>
					<button label="Open Load Detection" define="LS_CTRL[19]"/>
					<button label="Low Side Driver ON" define="LS_CTRL[18]"/>
					<button label="PWM Enable" define="LS_CTRL[17]"/>
				</branch>
				<branch label="Blanking Time Filter Settings">
					<combo label="Filter Time for OC detection" define="LS_LS2_TRIM[9:8]" default="32 µs Filter time">
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
						<item label="32 µs Filter time"/>
					</combo>
					<combo label="Filter Time for OL detection" define="LS_LS2_TRIM[1:0]" default="32 µs Filter time">
						<item label="4 µs Filter time"/>
						<item label="8 µs Filter time"/>
						<item label="16 µs Filter time"/>
						<item label="32 µs Filter time"/>
					</combo>
				</branch>
				<branch label="Source Select (PWM Output)">
					<combo label="PWM Source Selection" define="LS_PWMSRCSEL[2:0]" default="CCU6 CC60">
						<item label="CCU6 CC60"/>
						<item label="CCU6 CC61"/>
						<item label="CCU6 CC62"/>
						<item label="CCU6 COUT60"/>
						<item label="CCU6 COUT61"/>
						<item label="CCU6 COUT62"/>
						<item label="GPT12 T3OUT"/>
					</combo>
				</branch>
				<branch label="Interrupt">
					<button label="Overcurrent (OC)" define="LS2_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[18]=1">
						<button label="Enable Interrupt" define="LS_IRQEN[23]"/>
						<edit label="Call Back" define="LS2_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Open Load (OL)" define="LS2_OL_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[18]=1">
 						<button label="Enable Interrupt" define="LS_IRQEN[22]"/>
						<edit label="Call Back" define="LS2_OL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overtemperature (OT)" define="LS2_OT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[18]=1">
						<button label="Enable Interrupt" define="LS_IRQEN[21]"/>
						<edit label="Call Back" define="LS2_OT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</button>
		</header>
	</module>
	<module label="CCU6" desc="Capture Compare Unit 6">
		<header define="ccu6_defines.h">
<!--		<math label="Module Current (approx.)" unit="mA" define="DEV_CCU6_CURR" formula="0.04+0.03"/> -->
			<branch label="Timer12/13 Configuration             ">
				<branch label="Timer12">
					<math label="Timer12 Clock" unit="MHz" define="CCU6_T12_CLK" formula="SCU_PLL_fPLL/((2^CCU6_TCTR0[2:0])*(CCU6_TCTR0[3]?256:1))"/>
					<math label="Max. Period" unit="us" define="CCU6_T12_MAX_PERIOD" formula="65535/CCU6_T12_CLK"/>
					<branch label="Clock Prescaler">
						<combo label="Clock Divider" define="CCU6_TCTR0[2:0]" default="div 1">
							<item label="div 1"/>
							<item label="div 2"/>
							<item label="div 4"/>
							<item label="div 8"/>
							<item label="div 16"/>
							<item label="div 32"/>
							<item label="div 64"/>
							<item label="div 128"/>
						</combo>
						<button label="additional /256 Clock Prescaler enable" define="CCU6_TCTR0[3]"/>
					</branch>
					<branch label="Period Value">
						<radio define="CCU6_T12_PERIOD_SEL" default="1">
							<button label="...as clock ticks">
								<edit label="Period Value [ticks]" define="CCU6_T12_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]">
								<edit label="Time [us]" define="CCU6_T12_TIME" default="50"/>
							</button>
							<button label="...as frequency [Hz]">
								<edit label="Frequency [Hz]" define="CCU6_T12_FREQ" default="20000"/>
							</button>
						</radio>
						<math label="Period (ticks)" define="CCU6_T12PR[15:0]" formula="CCU6_T12_PERIOD_SEL&lt;1?CCU6_T12_TICK[15:0]:CCU6_T12_PERIOD_SEL&lt;2?CCU6_T12_CLK*CCU6_T12_TIME/(1+1*CCU6_TCTR0[7]):((CCU6_T12_CLK*1e6)/CCU6_T12_FREQ)/(1+1*CCU6_TCTR0[7])"/>
					</branch>
					<combo label="Operation Mode" define="CCU6_TCTR0[7]">
						<item label="Edge-aligned"/>
						<item label="Center-aligned"/>
					</combo>
					<combo label="Single Shot" define="CCU6_TCTR2[0]">
						<item label="disabled"/>
						<item label="enabled"/>
					</combo>
					<combo label="Trigger External Run Select" define="CCU6_TCTR2[9:8]">
						<item label="disabled"/>
						<item label="on rising edge on T12HR"/>
						<item label="on falling edge on T12HR"/>
						<item label="on any edge on T12HR"/>
					</combo>
					<branch label="Dead Time Control">
						<edit label="Dead Time [us]" define="CCU6_DEADTIME" default="0"/>
						<math label="Dead Time" unit="ticks" define="CCU6_T12DTC[7:0]" formula="CCU6_T12_CLK*CCU6_DEADTIME/(1+1*CCU6_TCTR0[7])"/>
						<button label="Channel 0 enabled" define="CCU6_T12DTC[8]"/>
						<button label="Channel 1 enabled" define="CCU6_T12DTC[9]"/>
						<button label="Channel 2 enabled" define="CCU6_T12DTC[10]"/>
					</branch>
				</branch>
				<branch label="Timer13">
					<math label="Timer13 Clock" unit="MHz" define="CCU6_T13_CLK" formula="SCU_PLL_fPLL/((2^CCU6_TCTR0[10:8])*(CCU6_TCTR0[11]?256:1))"/>
					<math label="Max. Period" unit="us" define="CCU6_T13_MAX_PERIOD" formula="65535/CCU6_T13_CLK"/>
					<branch label="Clock Prescaler">
						<combo label="Clock Divider" define="CCU6_TCTR0[10:8]" default="div 1">
							<item label="div 1"/>
							<item label="div 2"/>
							<item label="div 4"/>
							<item label="div 8"/>
							<item label="div 16"/>
							<item label="div 32"/>
							<item label="div 64"/>
							<item label="div 128"/>
						</combo>
						<button label="additional /256 Clock Prescaler enable" define="CCU6_TCTR0[11]"/>
					</branch>
					<branch label="Period Value">
						<radio define="CCU6_T13_PERIOD_SEL" default="1">
							<button label="...as clock ticks">
								<edit label="Period Value [ticks]" define="CCU6_T13_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]">
								<edit label="Time [us]" define="CCU6_T13_TIME" default="1"/>
							</button>
							<button label="...as frequency [Hz]">
								<edit label="Frequency [Hz]" define="CCU6_T13_FREQ" default="20000"/>
							</button>
						</radio>
						<math label="Period (ticks)" define="CCU6_T13PR[15:0]" formula="CCU6_T13_PERIOD_SEL&lt;1?CCU6_T13_TICK[15:0]:CCU6_T13_PERIOD_SEL&lt;2?CCU6_T13_CLK*CCU6_T13_TIME:(CCU6_T13_CLK*1e6)/CCU6_T13_FREQ"/>
					</branch>
					<combo label="Single Shot" define="CCU6_TCTR2[1]">
						<item label="disabled"/>
						<item label="enabled"/>
					</combo>
					<combo label="Trigger Select" define="CCU6_TCTR2[4:2]">
						<item label="no trigger"/>
						<item label="T12 Compare Match on Ch0 "/>
						<item label="T12 Compare Match on Ch1 "/>
						<item label="T12 Compare Match on Ch2 "/>
						<item label="T12 Compare Match on any channel"/>
						<item label="T12 Period Match"/>
						<item label="T12 Zero Match"/>
						<item label="any edge on CCPOSx inputs"/>
					</combo>
					<combo label="Trigger Event Direction" define="CCU6_TCTR2[6:5]">
						<item label="no action"/>
						<item label="T12 counting up"/>
						<item label="T12 counting down"/>
						<item label="T12 any counting direction"/>
					</combo>
					<combo label="Trigger External Run Select" define="CCU6_TCTR2[11:10]">
						<item label="disabled"/>
						<item label="on rising edge on T13HR"/>
						<item label="on falling edge on T13HR"/>
						<item label="on any edge on T13HR"/>
					</combo>
				</branch>
			</branch>
			<branch label="Channel Configuration">
				<branch label="Channel 0">
					<branch label="Compare Value">
						<radio define="CCU6_CH0_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH0_CMP_TIME=0;CCU6_CH0_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH0_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH0_CMP_TICK=0;CCU6_CH0_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH0_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH0_CMP_TICK=0;CCU6_CH0_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH0_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC60SR" formula="CCU6_CH0_CMP_TICK+(CCU6_T12_CLK*CCU6_CH0_CMP_TIME)+(CCU6_T12PR[15:0]*CCU6_CH0_CMP_DC/100)"/>
					</branch>
					<combo label="Capture/Compare Mode" define="CCU6_T12MSEL[3:0]">
						<item label="(0b0000) Compare outputs disabled"/>
						<item label="(0b0001) Compare output on CC60 "/>
						<item label="(0b0010) Compare output on COUT60"/>
						<item label="(0b0011) Compare output on CC60/COUT60"/>
						<item label="(0b0100) Capture T12 into CC60R/COUT60R on input CC60"/>
						<item label="(0b0101) CC60SR -> CC60R on rising edge CC60 input, T12 capture"/>
						<item label="(0b0110) CC60SR -> CC60R on falling edge CC60 input, T12 capture"/>
						<item label="(0b0111) CC60SR -> CC60R on any edge CC60 input, T12 capture"/>
						<item label="(0b1000) Hall-Sensor Mode"/>
						<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
						<item label="(0b1010) T12 -> CC60R on rising edge CC60 input, T12 -> CC60SR on falling edge CCPOS60"/>
						<item label="(0b1011) T12 -> CC60R on falling edge CC60 input, T12 -> CC60SR on rising edge CCPOS60"/>
						<item label="(0b1100) T12 -> CC60R on rising edge CC60 input, T12 -> CC60SR on rising edge CCPOS60"/>
						<item label="(0b1101) T12 -> CC60R on falling edge CC60 input, T12 -> CC60SR on falling edge CCPOS60"/>
						<item label="(0b1110) T12 -> CC60R on any edge CC60 input, T12 -> CC60SR on any edge CCPOS60"/>
					</combo>
					<branch label="Passive State">
						<branch label="CC60">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[8]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[0]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
						<branch label="COUT60">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[9]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[1]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
					</branch>
					<branch label="Modulation">
						<button label="Timer12 modulates CC60" define="CCU6_MODCTR[0]"/>
						<button label="Timer12 modulates COUT60" define="CCU6_MODCTR[1]"/>
						<button label="Timer13 modulates CC60" define="CCU6_MODCTR[8]"/>
						<button label="Timer13 modulates COUT60" define="CCU6_MODCTR[9]"/>
					</branch>
				</branch>
				<branch label="Channel 1">
					<branch label="Compare Value">
						<radio define="CCU6_CH1_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH1_CMP_TIME=0;CCU6_CH1_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH1_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH1_CMP_TICK=0;CCU6_CH1_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH1_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH1_CMP_TICK=0;CCU6_CH1_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH1_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC61SR" formula="CCU6_CH1_CMP_TICK+(CCU6_T12_CLK*CCU6_CH1_CMP_TIME)+(CCU6_T12PR[15:0]*CCU6_CH1_CMP_DC/100)"/>
					</branch>
					<combo label="Capture/Compare Mode" define="CCU6_T12MSEL[7:4]">
						<item label="(0b0000) Compare outputs disabled"/>
						<item label="(0b0001) Compare output on CC61 "/>
						<item label="(0b0010) Compare output on COUT61"/>
						<item label="(0b0011) Compare output on CC61/COUT61"/>
						<item label="(0b0100) Capture T12 into CC61R/COUT61R on input CC61"/>
						<item label="(0b0101) CC61SR -> CC61R on rising edge CC61 input, T12 capture"/>
						<item label="(0b0110) CC61SR -> CC61R on falling edge CC61 input, T12 capture"/>
						<item label="(0b0111) CC61SR -> CC61R on any edge CC61 input, T12 capture"/>
						<item label="(0b1000) Hall-Sensor Mode"/>
						<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
						<item label="(0b1010) T12 -> CC61R on rising edge CC61 input, T12 -> CC61SR on falling edge CCPOS61"/>
						<item label="(0b1011) T12 -> CC61R on falling edge CC61 input, T12 -> CC61SR on rising edge CCPOS61"/>
						<item label="(0b1100) T12 -> CC61R on rising edge CC61 input, T12 -> CC61SR on rising edge CCPOS61"/>
						<item label="(0b1101) T12 -> CC61R on falling edge CC61 input, T12 -> CC61SR on falling edge CCPOS61"/>
						<item label="(0b1110) T12 -> CC61R on any edge CC61 input, T12 -> CC61SR on any edge CCPOS61"/>
					</combo>
					<branch label="Passive State">
						<branch label="CC61">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[10]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[2]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
						<branch label="COUT61">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[11]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[3]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
					</branch>
					<branch label="Modulation">
						<button label="Timer12 modulates CC61" define="CCU6_MODCTR[2]"/>
						<button label="Timer12 modulates COUT61" define="CCU6_MODCTR[3]"/>
						<button label="Timer13 modulates CC61" define="CCU6_MODCTR[10]"/>
						<button label="Timer13 modulates COUT61" define="CCU6_MODCTR[11]"/>
					</branch>
				</branch>
				<branch label="Channel 2">
					<branch label="Compare Value">
						<radio define="CCU6_CH2_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH2_CMP_TIME=0;CCU6_CH2_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH2_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH2_CMP_TICK=0;CCU6_CH2_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH2_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH2_CMP_TICK=0;CCU6_CH2_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH2_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC62SR" formula="CCU6_CH2_CMP_TICK+(CCU6_T12_CLK*CCU6_CH2_CMP_TIME)+(CCU6_T12PR[15:0]*CCU6_CH2_CMP_DC/100)"/>
					</branch>
					<combo label="Capture/Compare Mode" define="CCU6_T12MSEL[11:8]">
						<item label="(0b0000) Compare outputs disabled"/>
						<item label="(0b0001) Compare output on CC62 "/>
						<item label="(0b0010) Compare output on COUT62"/>
						<item label="(0b0011) Compare output on CC62/COUT62"/>
						<item label="(0b0100) Capture T12 into CC62R/COUT62R on input CC62"/>
						<item label="(0b0101) CC62SR -> CC62R on rising edge CC62 input, T12 capture"/>
						<item label="(0b0110) CC62SR -> CC62R on falling edge CC62 input, T12 capture"/>
						<item label="(0b0111) CC62SR -> CC62R on any edge CC62 input, T12 capture"/>
						<item label="(0b1000) Hall-Sensor Mode"/>
						<item label="(0b1001) Hysteresis-like control mode with dead-time generation"/>
						<item label="(0b1010) T12 -> CC62R on rising edge CC62 input, T12 -> CC62SR on falling edge CCPOS62"/>
						<item label="(0b1011) T12 -> CC62R on falling edge CC62 input, T12 -> CC62SR on rising edge CCPOS62"/>
						<item label="(0b1100) T12 -> CC62R on rising edge CC62 input, T12 -> CC62SR on rising edge CCPOS62"/>
						<item label="(0b1101) T12 -> CC62R on falling edge CC62 input, T12 -> CC62SR on falling edge CCPOS62"/>
						<item label="(0b1110) T12 -> CC62R on any edge CC62 input, T12 -> CC62SR on any edge CCPOS62"/>
					</combo>
					<branch label="Passive State">
						<branch label="CC62">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[12]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[4]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
						<branch label="COUT62">
							<combo label="Passive State Select" define="CCU6_CMPSTAT[13]">
								<item label="Passive State before Compare"/>
								<item label="Passive State after Compare"/>
							</combo>
							<combo label="Passive State Level" define="CCU6_PSLR[5]">
								<item label="Low"/>
								<item label="High"/>
							</combo>
						</branch>
					</branch>
					<branch label="Modulation">
						<button label="Timer12 modulates CC62" define="CCU6_MODCTR[4]"/>
						<button label="Timer12 modulates COUT62" define="CCU6_MODCTR[5]"/>
						<button label="Timer13 modulates CC62" define="CCU6_MODCTR[12]"/>
						<button label="Timer13 modulates COUT62" define="CCU6_MODCTR[13]"/>
					</branch>
				</branch>
				<branch label="Channel 3">
					<branch label="Compare Value">
						<radio define="CCU6_CH3_CMP_SEL">
							<button label="...as timer ticks" lockon="CCU6_CH3_CMP_TIME=0;CCU6_CH3_CMP_DC=0">
								<edit label="Compare Value [ticks]" define="CCU6_CH3_CMP_TICK" default="0"/>
							</button>
							<button label="...as time [us]" lockon="CCU6_CH3_CMP_TICK=0;CCU6_CH3_CMP_DC=0">
								<edit label="Time [us]" define="CCU6_CH3_CMP_TIME" default="0"/>
							</button>
							<button label="...as duty cycle" lockon="CCU6_CH3_CMP_TICK=0;CCU6_CH3_CMP_TIME=0">
								<edit label="Duty Cycle (%)" define="CCU6_CH3_CMP_DC" default="0"/>
							</button>
						</radio>
						<math label="Compare Value" unit="ticks" define="CCU6_CC63SR" formula="CCU6_CH3_CMP_TICK+(CCU6_T13_CLK*CCU6_CH3_CMP_TIME)+(CCU6_T13PR[15:0]*CCU6_CH3_CMP_DC/100)"/>
					</branch>
					<branch label="Passive State - COUT63">
						<combo label="Passive State Select" define="CCU6_CMPSTAT[14]">
							<item label="Passive State before Compare"/>
							<item label="Passive State after Compare"/>
						</combo>
						<combo label="Passive State Level" define="CCU6_PSLR[7]">
							<item label="Low"/>
							<item label="High"/>
						</combo>
					</branch>
					<button label="Invert COUT63" define="CCU6_CMPSTAT[15]"/>
					<branch label="Modulation">
						<button label="Timer13 modulates COUT63" define="CCU6_MODCTR[15]"/>
					</branch>
				</branch>
			</branch>
			<branch label="HALL Configuration">
				<combo label="HALL Synchronization" define="CCU6_T12MSEL[14:12]">
					<item label="(0b000) any edge on CCPOS0(1,2)"/>
					<item label="(0b001) T13 compare match "/>
					<item label="(0b010) T13 period match"/>
					<item label="(0b011) HALL sampling switched off"/>
					<item label="(0b100) Capture T12 into CC62R/COUT62R on input CC62"/>
					<item label="(0b101) T12 period match (counting up)"/>
					<item label="(0b110) T12 one-match (counting down)"/>
					<item label="(0b111) T12 compare match on Channel 0"/>
				</combo>
				<button label="Delay Bypass" define="CCU6_T12MSEL[15]"/>
				<button label="Enable Idle Mode in case of Wrong HALL Event" define="CCU6_IEN[14]"/>
			</branch>
			<branch label="Interrupt Configuration">
				<branch label="Interrupt">
					<button label="Capture, Compare-Match Rising Edge for Channel 0 " define="CCU6_CH0_CM_R_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[0]"/>
						<edit label="Call Back" define="CCU6_CH0_CM_R_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Falling Edge for Channel 0" define="CCU6_CH0_CM_F_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[1]"/>
						<edit label="Call Back" define="CCU6_CH0_CM_F_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Rising Edge for Channel 1 " define="CCU6_CH1_CM_R_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[2]"/>
						<edit label="Call Back" define="CCU6_CH1_CM_R_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Falling Edge for Channel 1" define="CCU6_CH1_CM_F_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[3]"/>
						<edit label="Call Back" define="CCU6_CH1_CM_F_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Rising Edge for Channel 2 " define="CCU6_CH2_CM_R_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[4]"/>
						<edit label="Call Back" define="CCU6_CH2_CM_R_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture, Compare-Match Falling Edge for Channel 2" define="CCU6_CH2_CM_F_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[5]"/>
						<edit label="Call Back" define="CCU6_CH2_CM_F_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer12 One-Match" define="CCU6_T12_OM_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[6]"/>
						<edit label="Call Back" define="CCU6_T12_OM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer12 Period-Match" define="CCU6_T12_PM_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[7]"/>
						<edit label="Call Back" define="CCU6_T12_PM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer13 Compare-Match" define="CCU6_T13_CM_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[8]"/>
						<edit label="Call Back" define="CCU6_T13_CM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Timer13 Period-Match" define="CCU6_T13_PM_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[9]"/>
						<edit label="Call Back" define="CCU6_T13_PM_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Trap Flag" define="CCU6_TRAP_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[10]"/>
						<edit label="Call Back" define="CCU6_TRAP_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Correct Hall Event" define="CCU6_CHE_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[12]"/>
						<edit label="Call Back" define="CCU6_CORRECT_HALL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Wrong Hall Event" define="CCU6_WHE_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[13]"/>
						<edit label="Call Back" define="CCU6_WRONG_HALL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Multi-Channel Mode Shadow Transfer" define="CCU6_MCM_STR_INT_EN" header="isr_defines.h">
						<button label="Enable Interrupt" define="CCU6_IEN[15]"/>
						<edit label="Call Back" define="CCU6_MCM_STR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Interrupt Node Selection">
					<combo label="Channel 0" define="CCU6_INP[1:0]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Channel 1" define="CCU6_INP[3:2]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Channel 2" define="CCU6_INP[5:4]">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Correct Hall Event" define="CCU6_INP[7:6]" default="SR1">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Error" define="CCU6_INP[9:8]" default="SR1">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Timer 12" define="CCU6_INP[11:10]" default="SR2">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
					<combo label="Timer 13" define="CCU6_INP[13:12]" default="SR3">
						<item label="SR0"/>
						<item label="SR1"/>
						<item label="SR2"/>
						<item label="SR3"/>
					</combo>
				</branch>
				<branch label="Interrupt Node Enable">
					<button label="SR0 enable" define="CCU6_NVIC[0]" lockon="CPU_NVIC_ISER[4]=1"/>
					<button label="SR1 enable" define="CCU6_NVIC[1]" lockon="CPU_NVIC_ISER[5]=1"/>
					<button label="SR2 enable" define="CCU6_NVIC[2]" lockon="CPU_NVIC_ISER[6]=1"/>
					<button label="SR3 enable" define="CCU6_NVIC[3]" lockon="CPU_NVIC_ISER[7]=1"/>
				</branch>
			</branch>
			<button label="Multi-Channel Configuration" define="CCU6_MODCTR[7]">
				<combo label="Switching Selection" define="CCU6_MCMCTR[2:0]">
					<item label="no action"/>
					<item label="correct HALL pattern detected"/>
					<item label="Timer13 period match"/>
					<item label="Timer12 one match"/>
					<item label="Timer12 Channel 1 compare match"/>
					<item label="Timer12 period match"/>
				</combo>
				<combo label="Switching Synchronization" define="CCU6_MCMCTR[5:4]">
					<item label="direct trigger of shadow transfer"/>
					<item label="Timer13 zero match triggers shadow transfer"/>
					<item label="Timer12 zero match triggers shadow transfer"/>
				</combo>
				<button label="Shadow transfer for Timer12 up counting" define="CCU6_MCMCTR[8]"/>
				<button label="Shadow transfer for Timer12 down counting" define="CCU6_MCMCTR[9]"/>
				<button label="Shadow transfer for Timer13 up counting" define="CCU6_MCMCTR[10]"/>
			</button>
			<branch label="Trap Control">
				<combo label="Trap Mode" define="CCU6_TRPCTR[1:0]">
					<item label="trap state left on Timer12 zero match" value="0"/>
					<item label="trap state left on Timer13 zero match" value="1"/>
					<item label="trap state left immediately" value="3"/>
				</combo>
				<combo label="Trap Mode 2" define="CCU6_TRPCTR[2]">
					<item label="trap state left on /CTRAP input inactive"/>
					<item label="trap state left on TRPF reset by SW and /CTRAP input inactive"/>
				</combo>
				<button label="Trap on CC60" define="CCU6_TRPCTR[8]"/>
				<button label="Trap on COUT60" define="CCU6_TRPCTR[9]"/>
				<button label="Trap on CC61" define="CCU6_TRPCTR[10]"/>
				<button label="Trap on COUT61" define="CCU6_TRPCTR[11]"/>
				<button label="Trap on CC62" define="CCU6_TRPCTR[12]"/>
				<button label="Trap on COUT62" define="CCU6_TRPCTR[13]"/>
				<button label="Trap for Timer13" define="CCU6_TRPCTR[14]"/>
				<button label="Trap Pin (CTRAP)" define="CCU6_TRPCTR[15]"/>
			</branch>
			<branch label="Pin Select">
				<branch label="Inputs">
					<branch label="Channels">
						<combo label="CC60" define="CCU6_PISEL0[1:0]" default="CC60_1 (P2.3)">
							<item label="CC60_0 (P0.4)" value="0" lockon="PORT_P0_DIR[4]=Input"/>
							<item label="CC60_1 (P2.3)" value="1"/>
						</combo>
						<combo label="CC61" define="CCU6_PISEL0[3:2]" default="CC61_1 (P2.1)">
							<item label="CC61_0 (P1.0)" value="0" lockon="PORT_P1_DIR[0]=Input"/>
							<item label="CC61_1 (P2.1)" value="1" />
						</combo>
						<combo label="CC62" define="CCU6_PISEL0[5:4]" default="CC62_1 (P2.7)">
							<item label="CC62_0 (P0.1)" value="0" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="CC62_1 (P2.7)" value="1"/>
						</combo>
						<combo label="CTRAP" define="CCU6_PISEL0[7:6]" default="CTRAP_2 (P2.4)">
							<item label="CTRAP_0 (P0.2)" value="0" lockon="PORT_P0_DIR[2]=Input"/>
							<item label="CTRAP_1 (P2.3)" value="1"/>
							<item label="CTRAP_2 (P2.4)" value="2"/>
						</combo>
						<combo label="CCPOS0" define="CCU6_PISEL0[9:8]" default="CCPOS0_3 (P2.4)">
							<item label="CCPOS0_0 (P2.1)" value="0"/>
							<item label="CCPOS0_1 (P0.3)" value="1" lockon="PORT_P0_DIR[3]=Input"/>
							<item label="CCPOS0_2 (P2.0)" value="2"/>
							<item label="CCPOS0_3 (P2.4)" value="3"/>
						</combo>
						<combo label="CCPOS1" define="CCU6_PISEL0[11:10]" default="CCPOS1_3 (P2.5)">
							<item label="CCPOS1_0 (P2.3)" value="0"/>
							<item label="CCPOS1_1 (P0.4)" value="1" lockon="PORT_P0_DIR[4]=Input"/>
							<item label="CCPOS1_2 (P1.4)" value="2"/>
							<item label="CCPOS1_3 (P2.5)" value="3"/>
						</combo>
						<combo label="CCPOS2" define="CCU6_PISEL0[13:12]" default="CCPOS2_3 (P2.6)">
							<item label="CCPOS2_0 (P2.7)" value="0"/>
							<item label="CCPOS2_1 (P0.5)" value="1" lockon="PORT_P0_DIR[5]=Input"/>
							<item label="CCPOS2_2 (P1.2)" value="2"/>
							<item label="CCPOS2_3 (P2.6)" value="3"/>
						</combo>
					</branch>
					<branch label="Timers">
						<combo label="T12HR" define="CCU6_PISEL0[15:14]" default="T12HR_2 (P2.2)">
							<item label="T12HR_0 (P0.0)" value="0" lockon="PORT_P0_DIR[0]=Input"/>
							<item label="T12HR_1 (P2.1)" value="1"/>
							<item label="T12HR_2 (P2.2)" value="2"/>
						</combo>
						<combo label="T13HR" define="CCU6_PISEL2[1:0]" default="T13HR_2 (P2.6)">
							<item label="T13HR_0 (P0.1)" value="0" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="T13HR_1 (P2.7)" value="1"/>
							<item label="T13HR_2 (P2.6)" value="2"/>
						</combo>
						<combo label="Timer12 Counting Input" define="CCU6_PISEL2[3:2]">
							<item label="T12 prescaler"/>
							<item label="TCTR4.T12CNT"/>
							<item label="rising edge on T12HR"/>
							<item label="falling edge on T12HR"/>
						</combo>
						<combo label="Timer13 Counting Inputs" define="CCU6_PISEL2[5:4]">
							<item label="T13 prescaler"/>
							<item label="TCTR4.T13CNT"/>
							<item label="rising edge on T13HR"/>
							<item label="falling edge on T13HR"/>
						</combo>
					</branch>
				</branch>
				<branch label="Outputs">
					<branch label="Channels">
						<combo label="CC60" define="CCU6_TEMP_CC60_OUT" default="none">
							<item label="none"/>
							<item label="CC60_0 (P0.4)" lockon="PORT_P0_DIR[4]=Output;PORT_P0_4_ALT[1:0]=CC60_0"/>
						</combo>
						<combo label="COUT60" define="CCU6_TEMP_COUT60_OUT" default="none">
							<item label="none"/>
							<item label="COUT60_0 (P0.5)" lockon="PORT_P0_DIR[5]=Output;PORT_P0_5_ALT[1:0]=COUT60_0"/>
						</combo>
						<combo label="CC61" define="CCU6_TEMP_CC61_OUT" default="none">
							<item label="none"/>
							<item label="CC61_0 (P1.0)" lockon="PORT_P1_DIR[0]=Output;PORT_P1_0_ALT[1:0]=CC61_0"/>
						</combo>
						<combo label="COUT61" define="CCU6_TEMP_COUT61_OUT" default="none">
							<item label="none"/>
							<item label="COUT61_0 (P1.1)" lockon="PORT_P1_DIR[1]=Output;PORT_P1_1_ALT[1:0]=COUT61_0"/>
						</combo>
						<combo label="CC62" define="CCU6_TEMP_CC62_OUT" default="none">
							<item label="none"/>
							<item label="CC62_0 (P0.1)" lockon="PORT_P0_DIR[1]=Output;PORT_P0_1_ALT[1:0]=CC62_0"/>
						</combo>
						<combo label="COUT62" define="CCU6_TEMP_COUT62_OUT" default="none">
							<item label="none"/>
							<item label="COUT62_0 (P1.4)" lockon="PORT_P1_DIR[4]=Output;PORT_P1_4_ALT[1:0]=COUT62_0"/>
						</combo>
						<combo label="COUT63" define="CCU6_TEMP_COUT63_OUT" default="none">
							<item label="none"/>
							<item label="COUT63_0 (P1.2)" lockon="PORT_P1_DIR[2]=Output;PORT_P1_2_ALT[1:0]=COUT63_0"/>
						</combo>
					</branch>
				</branch>
			</branch>
		</header>
	</module>
	<module label="GPT12E" desc="General Purpose Timer 12E">
		<header define="gpt12e_defines.h">
			<branch label="GPT1">
				<branch label="Clock">
					<combo label="Block Prescaler" define="GPT12E_T3CON[12:11]" default="fGPT / 4">
						<item label="fGPT / 8"/>
						<item label="fGPT / 4"/>
						<item label="fGPT / 32"/>
						<item label="fGPT / 16"/>
					</combo>
					<math label="GPT1 Clock" unit="MHz" define="GPT1_BASE_CLK" formula="SCU_PLL_fPLL/(4*2^(GPT12E_T3CON[12:11].^1))"/>
				</branch>
				<branch label="Aux. Timer2">
					<math label="GPT1 Timer2 Clock" unit="MHz" define="GPT1_T2_CLK" formula="GPT1_BASE_CLK/(2^(GPT12E_T2CON_T2I_TIMER)*2^(GPT12E_T2CON_T2I_GATED_TIMER_LOW)*2^(GPT12E_T2CON_T2I_GATED_TIMER_HIGH))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T2CON[5:3]">
							<button label="Timer Mode" value="0" lockon="GPT12E_T2CON_T2I_GATED_TIMER_LOW=Block Prescaler * 1;GPT12E_T2CON_T2I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T2CON_T2I_TIMER">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_COUNTER">
									<item label="None. Counter T2 is disabled" value="0"/>
									<item label="Rising edge on T2IN" value="1"/>
									<item label="Falling edge on T2IN" value="2"/>
									<item label="Rising or Falling edge on T2IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2" lockon="GPT12E_T2CON_T2I_TIMER=Block Prescaler * 1;GPT12E_T2CON_T2I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T2CON_T2I_GATED_TIMER_LOW">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3" lockon="GPT12E_T2CON_T2I_TIMER=Block Prescaler * 1;GPT12E_T2CON_T2I_GATED_TIMER_LOW=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T2CON_T2I_GATED_TIMER_HIGH">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Reload Mode" value="4">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_RELOAD">
									<item label="None. Counter T2 is disabled" value="0"/>
									<item label="Rising edge on T2IN" value="1"/>
									<item label="Falling edge on T2IN" value="2"/>
									<item label="Rising or Falling edge on T2IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Capture Mode" value="5">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_CAPTURE">
									<item label="None. Counter T2 is disabled" value="0"/>
									<item label="Rising edge on T2IN" value="1"/>
									<item label="Falling edge on T2IN" value="2"/>
									<item label="Rising or Falling edge on T2IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, rotation detection" value="6">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_INC_ROT">
									<item label="None. Counter T2 stopped"/>
									<item label="Rising or Falling edge on T2IN"/>
									<item label="Rising or Falling edge on T2EUD"/>
									<item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, edge detection" value="7">
								<combo label="Input Edge Select" define="GPT12E_T2CON_T2I_INC_EDGE">
									<item label="None. Counter T2 stopped"/>
									<item label="Rising or Falling edge on T2IN"/>
									<item label="Rising or Falling edge on T2EUD"/>
									<item label="Rising or Falling edge on any T2 input (T2IN, T2EUD)"/>
								</combo>
							</button>
						</radio>
						<math label="T2I" define="GPT12E_T2CON[2:0]" formula="GPT12E_T2CON[5:3]&lt;1?GPT12E_T2CON_T2I_TIMER:GPT12E_T2CON[5:3]&lt;2?GPT12E_T2CON_T2I_COUNTER:GPT12E_T2CON[5:3]&lt;3?GPT12E_T2CON_T2I_GATED_TIMER_LOW:GPT12E_T2CON[5:3]&lt;4?GPT12E_T2CON_T2I_GATED_TIMER_HIGH:GPT12E_T2CON[5:3]&lt;5?GPT12E_T2CON_T2I_RELOAD:GPT12E_T2CON[5:3]&lt;6?GPT12E_T2CON_T2I_CAPTURE:GPT12E_T2CON[5:3]&lt;7?GPT12E_T2CON_T2I_INC_ROT:GPT12E_T2CON_T2I_INC_EDGE"/>
					</branch>
					<button label="Remote Run Control by T3" define="GPT12E_T2CON[9]"/>
					<branch label="Direction Control">
						<radio define="GPT12E_T2CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T2CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T2EUD input">
								<combo label="T2EUD Input Pin Select" define="GPT12E_PISEL[1]" default="T2EUDB (P2.4)">
									<item label="T2EUDA (P0.2)" lockon="PORT_P0_DIR[2]=Input"/>
									<item label="T2EUDB (P2.4)"/>
								</combo>
							</button>
						</radio>
					</branch>
					<branch label="T2 Timer Value">
						<radio define="GPT12E_TEMP_T2_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T2_TIME=0">
								<edit label="T2 Value [ticks]" define="GPT12E_T2_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T2_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T2_TIME" default="1"/>
							</button>
						</radio>
						<math label="T2 Timer Value" unit="ticks" define="GPT12E_T2[15:0]" formula="GPT12E_T2CON[7]>0?(GPT12E_T2_TICK[15:0]+GPT1_T2_CLK*GPT12E_T2_TIME):(0x10000-(GPT12E_T2_TICK[15:0]+GPT1_T2_CLK*GPT12E_T2_TIME))"/>
					</branch>
					<button label="T2 Pin Select" define="GPT12E_TEMP_T2_PISEL">
						<combo label="T2IN Pin Select" define="GPT12E_PISEL[0]" default="T2INA (P1.2)">
							<item label="T2INA (P1.2)" lockon="PORT_P1_DIR[2]=Input"/>
							<item label="T2INB (P1.4)" lockon="PORT_P1_DIR[4]=Input"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[0]=1">
						<button label="Enable Interrupt" define="SCU_GPT12IEN[0]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT1_T2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Core Timer3">
					<math label="GPT1 Timer3 Clock" unit="MHz" define="GPT1_T3_CLK" formula="GPT1_BASE_CLK/(2^(GPT12E_T3CON_T3I_TIMER)*2^(GPT12E_T3CON_T3I_GATED_TIMER_LOW)*2^(GPT12E_T3CON_T3I_GATED_TIMER_HIGH))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T3CON[5:3]">
							<button label="Timer Mode" value="0" lockon="GPT12E_T3CON_T3I_GATED_TIMER_LOW=Block Prescaler * 1;GPT12E_T3CON_T3I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T3CON_T3I_TIMER">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T3CON_T3I_COUNTER">
									<item label="None. Counter T3 is disabled"/>
									<item label="Rising edge on T3IN"/>
									<item label="Falling edge on T3IN"/>
									<item label="Rising or Falling edge on T3IN"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2" lockon="GPT12E_T3CON_T3I_TIMER=Block Prescaler * 1;GPT12E_T3CON_T3I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T3CON_T3I_GATED_TIMER_LOW">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3" lockon="GPT12E_T3CON_T3I_TIMER=Block Prescaler * 1;GPT12E_T3CON_T3I_GATED_TIMER_LOW=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T3CON_T3I_GATED_TIMER_HIGH">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, rotation detection" value="6">
								<combo label="Input Edge Select" define="GPT12E_T3CON_T3I_INC_ROT">
									<item label="None. Counter T3 stopped"/>
									<item label="Rising or Falling edge on T3IN"/>
									<item label="Rising or Falling edge on T3EUD"/>
									<item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, edge detection" value="7">
								<combo label="Input Edge Select" define="GPT12E_T3CON_T3I_INC_EDGE">
									<item label="None. Counter T3 stopped"/>
									<item label="Rising or Falling edge on T3IN"/>
									<item label="Rising or Falling edge on T3EUD"/>
									<item label="Rising or Falling edge on any T3 input (T3IN, T3EUD)"/>
								</combo>
							</button>
						</radio>
						<math label="T3I" define="GPT12E_T3CON[2:0]" formula="GPT12E_T3CON[5:3]&lt;1?GPT12E_T3CON_T3I_TIMER:GPT12E_T3CON[5:3]&lt;2?GPT12E_T3CON_T3I_COUNTER:GPT12E_T3CON[5:3]&lt;3?GPT12E_T3CON_T3I_GATED_TIMER_LOW:GPT12E_T3CON[5:3]&lt;4?GPT12E_T3CON_T3I_GATED_TIMER_HIGH:GPT12E_T3CON[5:3]&lt;7?GPT12E_T3CON_T3I_INC_ROT:GPT12E_T3CON_T3I_INC_EDGE"/>
					</branch>
					<branch label="Direction Control">
						<radio define="GPT12E_T3CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T3CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T3EUD input">
								<combo label="T3EUD Input Pin Select" define="GPT12E_PISEL[5:4]" default="T3EUDB (P2.5)">
									<item label="T3EUDA (P0.4)" lockon="PORT_P0_DIR[4]=Input"/>
									<item label="T3EUDB (P2.5)"/>
								</combo>
							</button>
						</radio>
					</branch>
					<button label="T3 Output Toggle Latch (T3OTL) preset" define="GPT12E_T3CON[10]"/>
					<button label="Overflow/Underflow Output Enable - T3OUT" define="GPT12E_T3CON[9]">
						<combo label="T3OUT Pin Select" define="GPT12E_TEMP_T3OUT" default="no pin output, device internal only">
							<item label="no pin output, device internal only"/>
							<item label="T3OUT (P0.0)" lockon="PORT_P0_DIR[0]=Output;PORT_P0_0_ALT[1:0]=T3OUT"/>
							<item label="T3OUT (P1.2)" lockon="PORT_P1_DIR[2]=Output;PORT_P1_2_ALT[1:0]=T3OUT"/>
						</combo>
					</button>
					<branch label="T3 Timer Value">
						<radio define="GPT12E_TEMP_T3_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T3_TIME=0">
								<edit label="T3 Value [ticks]" define="GPT12E_T3_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T3_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T3_TIME" default="1"/>
							</button>
						</radio>
						<math label="T3 Timer Value" unit="ticks" define="GPT12E_T3[15:0]" formula="GPT12E_T3CON[7]>0?(GPT12E_T3_TICK[15:0]+GPT1_T3_CLK*GPT12E_T3_TIME):(0x10000-(GPT12E_T3_TICK[15:0]+GPT1_T3_CLK*GPT12E_T3_TIME))" default="1"/>
					</branch>
					<button label="T3 Pin Select" define="GPT12E_TEMP_T3_PISEL">
						<combo label="T3IN Pin Select" define="GPT12E_PISEL[3:2]" default="T3IND (P2.3)">
							<item label="T3INA (CCU6 - CC60)"/>
							<item label="T3INB (T3INB/T4IND Input Selector from CCU6)"/>
							<item label="T3INC (P1.0)" lockon="PORT_P1_DIR[0]=Input"/>
							<item label="T3IND (P2.3)"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T3_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[0]=1">
						<button label="Enable Interrupt" define="SCU_GPT12IEN[1]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT1_T3_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Aux. Timer4">
					<math label="GPT1 Timer4 Clock" unit="MHz" define="GPT1_T4_CLK" formula="GPT1_BASE_CLK/(2^(GPT12E_T4CON_T4I_TIMER)*2^(GPT12E_T4CON_T4I_GATED_TIMER_LOW)*2^(GPT12E_T4CON_T4I_GATED_TIMER_HIGH))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T4CON[5:3]">
							<button label="Timer Mode" value="0" lockon="GPT12E_T4CON_T4I_GATED_TIMER_LOW=Block Prescaler * 1;GPT12E_T4CON_T4I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T4CON_T4I_TIMER">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_COUNTER">
									<item label="None. Counter T4 is disabled" value="0"/>
									<item label="Rising edge on T4IN" value="1"/>
									<item label="Falling edge on T4IN" value="2"/>
									<item label="Rising or Falling edge on T4IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2" lockon="GPT12E_T4CON_T4I_TIMER=Block Prescaler * 1;GPT12E_T4CON_T4I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T4CON_T4I_GATED_TIMER_LOW">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3" lockon="GPT12E_T4CON_T4I_TIMER=Block Prescaler * 1;GPT12E_T4CON_T4I_GATED_TIMER_LOW=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T4CON_T4I_GATED_TIMER_HIGH">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Reload Mode" value="4">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_RELOAD">
									<item label="None. Counter T4 is disabled" value="0"/>
									<item label="Rising edge on T4IN" value="1"/>
									<item label="Falling edge on T4IN" value="2"/>
									<item label="Rising or Falling edge on T4IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Capture Mode" value="5">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_CAPTURE">
									<item label="None. Counter T4 is disabled" value="0"/>
									<item label="Rising edge on T4IN" value="1"/>
									<item label="Falling edge on T4IN" value="2"/>
									<item label="Rising or Falling edge on T4IN" value="3"/>
									<item label="Rising edge on T3OTL" value="5"/>
									<item label="Falling edge on T3OTL" value="6"/>
									<item label="Rising or Falling edge on T3OTL" value="7"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, rotation detection" value="6">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_INC_ROT">
									<item label="None. Counter T4 stopped"/>
									<item label="Rising or Falling edge on T4IN"/>
									<item label="Rising or Falling edge on T4EUD"/>
									<item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
								</combo>
							</button>
							<button label="Inc. Interface Mode, edge detection" value="7">
								<combo label="Input Edge Select" define="GPT12E_T4CON_T4I_INC_EDGE">
									<item label="None. Counter T4 stopped"/>
									<item label="Rising or Falling edge on T4IN"/>
									<item label="Rising or Falling edge on T4EUD"/>
									<item label="Rising or Falling edge on any T4 input (T4IN, T4EUD)"/>
								</combo>
							</button>
						</radio>
						<math label="T4I" define="GPT12E_T4CON[2:0]" formula="GPT12E_T4CON[5:3]&lt;1?GPT12E_T4CON_T4I_TIMER:GPT12E_T4CON[5:3]&lt;2?GPT12E_T4CON_T4I_COUNTER:GPT12E_T4CON[5:3]&lt;3?GPT12E_T4CON_T4I_GATED_TIMER_LOW:GPT12E_T4CON[5:3]&lt;4?GPT12E_T4CON_T4I_GATED_TIMER_HIGH:GPT12E_T4CON[5:3]&lt;5?GPT12E_T4CON_T4I_RELOAD:GPT12E_T4CON[5:3]&lt;6?GPT12E_T4CON_T4I_CAPTURE:GPT12E_T4CON[5:3]&lt;7?GPT12E_T4CON_T4I_INC_ROT:GPT12E_T4CON_T4I_INC_EDGE"/>
					</branch>
					<button label="Remote Run Control by T3" define="GPT12E_T4CON[9]"/>
					<combo label="Clear Timer T2 Enable" define="GPT12E_T4CON[10]">
						<item label="No effect on Timer T2"/>
						<item label="A falling edge on T4EUD clears Timer T2"/>
					</combo>
					<combo label="Clear Timer T3 Enable" define="GPT12E_T4CON[11]">
						<item label="No effect on Timer T3"/>
						<item label="A falling edge on T4EUD clears Timer T3"/>
					</combo>
					<branch label="Direction Control">
						<radio define="GPT12E_T4CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T4CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T4EUD input">
								<combo label="T4EUD Input Pin Select" define="GPT12E_PISEL[9:8]" default="T4EUDA (P0.3)">
									<item label="T4EUDA (P0.3)" lockon="PORT_P0_DIR[3]=Input"/>
									<item label="T4EUDB (P1.0)" lockon="PORT_P1_DIR[0]=Input"/>
								</combo>
							</button>
						</radio>
					</branch>
					<branch label="T4 Timer Value">
						<radio define="GPT12E_TEMP_T4_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T4_TIME=0">
								<edit label="T4 Value [ticks]" define="GPT12E_T4_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T4_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T4_TIME" default="1"/>
							</button>
						</radio>
						<math label="T4 Timer Value" unit="ticks" define="GPT12E_T4[15:0]" formula="GPT12E_T4CON[7]>0?(GPT12E_T4_TICK[15:0]+GPT1_T4_CLK*GPT12E_T4_TIME):(0x10000-(GPT12E_T4_TICK[15:0]+GPT1_T4_CLK*GPT12E_T4_TIME))"/>
					</branch>
					<button label="T4 Pin Select" define="GPT12E_TEMP_T4_PISEL">
						<combo label="T4IN Pin Select" define="GPT12E_PISEL[7:6]" default="T4INB (CCU6 - CC60)">
							<item label="T4INA (P0.0)" lockon="PORT_P0_DIR[0]=Input"/>
							<item label="T4INB (CCU6 - CC60)"/>
							<item label="T4INC (P0.1)" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="T4IND (T3INB/T4IND Input Selector from CCU6)"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T4_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[0]=1">
						<button label="Enable Interrupt" define="SCU_GPT12IEN[2]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT1_T4_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="T3INB/T4IND Input Selector from CCU6">
					<combo label="Input Selector" define="SCU_GPT12PISEL[3:0]" header="scu_defines.h">
						<item label="CC60"/>
						<item label="CC61"/>
						<item label="CC62"/>
						<item label="T12 Zero Match"/>
						<item label="T12 Period Match"/>
						<item label="T12 Compare Match Ch0"/>
						<item label="T12 Compare Match Ch1"/>
						<item label="T12 Compare Match Ch2"/>
						<item label="T13 Period Match"/>
						<item label="T13 Zero Match"/>
						<item label="T13 Compare Match"/>
						<item label="any rising/falling edge on CC60/61/62"/>
					</combo>
				</branch>
			</branch>
			<branch label="GPT2                                    ">
				<branch label="Clock">
					<combo label="Block Prescaler" define="GPT12E_T6CON[12:11]" default="fGPT / 2">
						<item label="fGPT / 4"/>
						<item label="fGPT / 2"/>
						<item label="fGPT / 16"/>
						<item label="fGPT / 8"/>
					</combo>
					<math label="GPT2 Clock" unit="MHz" define="GPT2_BASE_CLK" formula="SCU_PLL_fPLL/(2*2^(GPT12E_T6CON[12:11].^1))"/>
				</branch>
				<branch label="Aux. Timer5">
					<math label="GPT2 Timer5 Clock" unit="MHz" define="GPT2_T5_CLK" formula="GPT2_BASE_CLK/(2^(GPT12E_T5CON_T5I_TIMER)*2^(GPT12E_T5CON_T5I_GATED_TIMER_LOW)*2^(GPT12E_T5CON_T5I_GATED_TIMER_HIGH))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T5CON[5:3]">
							<button label="Timer Mode" value="0" lockon="GPT12E_T5CON_T5I_GATED_TIMER_LOW=Block Prescaler * 1;GPT12E_T5CON_T5I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T5CON_T5I_TIMER">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T5CON_T5I_COUNTER">
									<item label="None. Counter T5 is disabled"/>
									<item label="Rising edge on T5IN"/>
									<item label="Falling edge on T5IN"/>
									<item label="Rising or Falling edge on T5IN"/>
									<item label="Rising edge on T6OTL"/>
									<item label="Falling edge on T6OTL"/>
									<item label="Rising or Falling edge on T6OTL"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2" lockon="GPT12E_T5CON_T5I_TIMER=Block Prescaler * 1;GPT12E_T5CON_T5I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T5CON_T5I_GATED_TIMER_LOW">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3" lockon="GPT12E_T5CON_T5I_TIMER=Block Prescaler * 1;GPT12E_T5CON_T5I_GATED_TIMER_LOW=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T5CON_T5I_GATED_TIMER_HIGH">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
						</radio>
						<math label="T5I" define="GPT12E_T5CON[2:0]" formula="GPT12E_T5CON[5:3]&lt;1?GPT12E_T5CON_T5I_TIMER:GPT12E_T5CON[5:3]&lt;2?GPT12E_T5CON_T5I_COUNTER:GPT12E_T5CON[5:3]&lt;3?GPT12E_T5CON_T5I_GATED_TIMER_LOW:GPT12E_T5CON_T5I_GATED_TIMER_HIGH"/>
					</branch>
					<button label="Capture into CAPREL enabled" define="GPT12E_T5CON[15]">
						<combo label="CAPREL Capture Trigger Selection" define="GPT12E_T5CON[13:10]" default="0">
							<item label="Capture disabled" value="0"/>
							<item label="rising edge on CAPIN" value="4"/>
							<item label="falling edge on CAPIN" value="8"/>
							<item label="rising or falling edge on CAPIN" value="12"/>
							<item label="any edge on T3IN" value="5"/>
							<item label="any edge on T3EUD" value="9"/>
							<item label="any edge on T3IN or T3EUD" value="13"/>
						</combo>
						<button label="T5 cleared on capture event" define="GPT12E_T5CON[14]"/>
					</button>
					<button label="Remote Run Control by T6" define="GPT12E_T5CON[9]"/>
					<branch label="Direction Control">
						<radio define="GPT12E_T5CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T5CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T5EUD input">
								<combo label="T5EUD Input Pin Select" define="GPT12E_PISEL[11]" default="T5EUDB (P2.0)">
									<item label="T5EUDA (P1.4)" lockon="PORT_P1_DIR[4]=Input"/>
									<item label="T5EUDB (P2.0)"/>
								</combo>
							</button>
						</radio>
					</branch>
					<branch label="T5 Timer Value">
						<radio define="GPT12E_TEMP_T5_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T5_TIME=0">
								<edit label="T5 Value [ticks]" define="GPT12E_T5_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T5_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T5_TIME" default="1"/>
							</button>
						</radio>
						<math label="T5 Timer Value" unit="ticks" define="GPT12E_T5[15:0]" formula="GPT12E_T5CON[7]>0?(GPT12E_T5_TICK[15:0]+GPT2_T5_CLK*GPT12E_T5_TIME):(0x10000-(GPT12E_T5_TICK[15:0]+GPT2_T5_CLK*GPT12E_T5_TIME))"/>
					</branch>
					<button label="T5 Pin Select" define="GPT12E_TEMP_T5_PISEL">
						<combo label="T5IN Pin Select" define="GPT12E_PISEL[10]" default="T5INB (P1.1)">
							<item label="T5INA (P0.5)" lockon="PORT_P0_DIR[5]=Input"/>
							<item label="T5INB (P1.1)" lockon="PORT_P1_DIR[1]=Input"/>
						</combo>
						<combo label="CAPIN Input Pin Select" define="GPT12E_PISEL[15:14]" default="CAPINC (read of T3)">
							<item label="CAPINA (P0.1)" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="CAPINB (P0.3)" lockon="PORT_P0_DIR[3]=Input"/>
							<item label="CAPINC (read of T3)"/>
							<item label="CAPIND (read of T2, T3, T4)"/>
						</combo>
					</button>
					<button label="T5 Interrupt" define="GPT12E_T5_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[1]=1">
						<button label="Enable Interrupt" define="SCU_GPT12IEN[3]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT2_T5_CALLBACK" role="string" header="isr_defines.h" default="place_your_function_call_back_here"/>
					</button>
					<button label="Capture Interrupt" define="GPT12E_CAPREL_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[1]=1">
						<button label="Enable Interrupt" define="SCU_GPT12IEN[5]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT2_CAPREL_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="CAPREL">
					<radio define="GPT12E_TEMP_CAPREL_SEL">
						<button label="...as clock ticks" lockon="GPT12E_CAPREL_TIME=0">
							<edit label="CAPREL Value [ticks]" define="GPT12E_CAPREL_TICK[15:0]" default="1"/>
						</button>
						<button label="...as time [us]" lockon="GPT12E_CAPREL_TICK[15:0]=0">
							<edit label="Time [us]" define="GPT12E_CAPREL_TIME" default="1"/>
						</button>
					</radio>
					<math label="CAPREL Timer Value" unit="ticks" define="GPT12E_CAPREL[15:0]" formula="GPT12E_T6CON[7]>0?(GPT12E_CAPREL_TICK[15:0]+GPT2_T6_CLK*GPT12E_CAPREL_TIME):(0x10000-(GPT12E_CAPREL_TICK[15:0]+GPT2_T6_CLK*GPT12E_CAPREL_TIME))"/>
				</branch>
				<branch label="Core Timer6">
					<math label="GPT2 Timer6 Clock" unit="MHz" define="GPT2_T6_CLK" formula="GPT2_BASE_CLK/(2^(GPT12E_T6CON_T6I_TIMER)*2^(GPT12E_T6CON_T6I_GATED_TIMER_LOW)*2^(GPT12E_T6CON_T6I_GATED_TIMER_HIGH))"/>
					<branch label="Mode Select">
						<radio  define="GPT12E_T6CON[5:3]">
							<button label="Timer Mode" value="0" lockon="GPT12E_T6CON_T6I_GATED_TIMER_LOW=Block Prescaler * 1;GPT12E_T6CON_T6I_GATED_TIMER_HIGH=Block Prescaler * 1">>
								<combo label="Individual Prescaler" define="GPT12E_T6CON_T6I_TIMER">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Counter Mode" value="1">
								<combo label="Input Edge Select" define="GPT12E_T6CON_T6I_COUNTER">
									<item label="None. Counter T6 is disabled"/>
									<item label="Rising edge on T6IN"/>
									<item label="Falling edge on T6IN"/>
									<item label="Rising or Falling edge on T6IN"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, low active" value="2" lockon="GPT12E_T6CON_T6I_TIMER=Block Prescaler * 1;GPT12E_T6CON_T6I_GATED_TIMER_HIGH=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T6CON_T6I_GATED_TIMER_LOW">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
							<button label="Gated Timer Mode, high active" value="3" lockon="GPT12E_T6CON_T6I_TIMER=Block Prescaler * 1;GPT12E_T6CON_T6I_GATED_TIMER_LOW=Block Prescaler * 1">
								<combo label="Individual Prescaler" define="GPT12E_T6CON_T6I_GATED_TIMER_HIGH">
									<item label="Block Prescaler * 1"/>
									<item label="Block Prescaler * 2"/>
									<item label="Block Prescaler * 4"/>
									<item label="Block Prescaler * 8"/>
									<item label="Block Prescaler * 16"/>
									<item label="Block Prescaler * 32"/>
									<item label="Block Prescaler * 64"/>
									<item label="Block Prescaler * 128"/>
								</combo>
							</button>
						</radio>
						<math label="T6I" define="GPT12E_T6CON[2:0]" formula="GPT12E_T6CON[5:3]&lt;1?GPT12E_T6CON_T6I_TIMER:GPT12E_T6CON[5:3]&lt;2?GPT12E_T6CON_T6I_COUNTER:GPT12E_T6CON[5:3]&lt;3?GPT12E_T6CON_T6I_GATED_TIMER_LOW:GPT12E_T6CON_T6I_GATED_TIMER_HIGH"/>
					</branch>
					<button label="T6 cleared on capture event" define="GPT12E_T6CON[14]"/>
					<button label="T6 reload by CAPREL" define="GPT12E_T6CON[15]"/>
					<branch label="Direction Control">
						<radio define="GPT12E_T6CON[8]">
							<button label="Software Direction Control">
								<combo label="Count Direction" define="GPT12E_T6CON[7]">
									<item label="up counting"/>
									<item label="down counting"/>
								</combo>
							</button>
							<button label="Hardware Direction Control, by T6EUD input">
								<combo label="T6EUD Input Pin Select" define="GPT12E_PISEL[13]" default="T6EUDA (P1.1)">
									<item label="T6EUDA (P1.1)" lockon="PORT_P1_DIR[1]=Input"/>
									<item label="T6EUDB (P2.2)"/>
								</combo>
							</button>
						</radio>
					</branch>
					<button label="T6 Output Toggle Latch (T6OTL) preset" define="GPT12E_T6CON[10]"/>
					<button label="Overflow/Underflow Output Enable - T6OUT" define="GPT12E_T6CON[9]">
						<combo label="T6OUT Pin Select" define="GPT12E_TEMP_T6OUT" default="no pin output, device internal only">
							<item label="no pin output, device internal only"/>
							<item label="T6OUT (P0.3)" lockon="PORT_P0_DIR[3]=Output;PORT_P0_3_ALT[1:0]=T6OUT_1"/>
							<item label="T6OUT (P0.1)" lockon="PORT_P0_DIR[1]=Output;PORT_P0_1_ALT[1:0]=T6OUT_0"/>
						</combo>
					</button>
					<branch label="T6 Timer Value">
						<radio define="GPT12E_TEMP_T6_SEL">
							<button label="...as clock ticks" lockon="GPT12E_T6_TIME=0">
								<edit label="T6 Value [ticks]" define="GPT12E_T6_TICK[15:0]" default="1"/>
							</button>
							<button label="...as time [us]" lockon="GPT12E_T6_TICK[15:0]=0">
								<edit label="Time [us]" define="GPT12E_T6_TIME" default="1"/>
							</button>
						</radio>
						<math label="T6 Timer Value" unit="ticks" define="GPT12E_T6[15:0]" formula="GPT12E_T6CON[7]>0?(GPT12E_T6_TICK[15:0]+GPT2_T6_CLK*GPT12E_T6_TIME):(0x10000-(GPT12E_T6_TICK[15:0]+GPT2_T6_CLK*GPT12E_T6_TIME))"/>
					</branch>
					<button label="T6 Pin Select" define="GPT12E_TEMP_T6_PISEL">
						<combo label="T6IN Pin Select" define="GPT12E_PISEL[12]" default="T6INA (CCU6 - CC61)">
							<item label="T6INA (CCU6 - CC61)"/>
							<item label="T6INB (CCU6 - COUT61)"/>
						</combo>
					</button>
					<button label="Interrupt" define="GPT12E_T6_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[1]=1">
						<button label="Enable Interrupt" define="SCU_GPT12IEN[4]" header="int_defines.h"/>
						<edit label="Call Back" define="GPT2_T6_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
			</branch>
		</header>
	</module>
	<module label="Timer2x" desc="Timer2x">
		<header define="timer2x_defines.h">
			<button label="Configure Timer2" define="TIMER2_Configuration_En">
				<math label="Timer2 Clock" unit="MHz" define="TIMER2_CLK" formula="TIMER2_MOD[4]?SCU_PLL_fPLL/(2^(TIMER2_MOD[3:1])):SCU_PLL_fPLL/12"/>
				<math label="Max. Period" unit="us" define="TIMER2_MAX_PERIOD" formula="65535/TIMER2_CLK"/>
				<branch label="Clock Setting">
					<radio label="Timer / Counter Select" define="TIMER2_CON[1]">
						<button label="Timer">
							<button label="Prescaler Enable" define="TIMER2_MOD[4]">
								<combo label="Prescaler" define="TIMER2_MOD[3:1]">
									<item label="divide by 1" />
									<item label="divide by 2" />
									<item label="divide by 4" />
									<item label="divide by 8" />
									<item label="divide by 16" />
									<item label="divide by 32" />
									<item label="divide by 64" />
									<item label="divide by 128" />
								</combo>
							</button>
						</button>
						<button label="Counter" />
					</radio>
				</branch>
				<branch label="Mode Select">
					<radio define="TIMER2_CON[0]">
						<button label="Auto-Reload Mode">
							<combo label="Up/Down Counter Enable" define="TIMER2_MOD[0]">
								<item label="Disabled" />
								<item label="Enabled" />
							</combo>
						</button>
						<button label="Capture Mode" />
					</radio>
				</branch>
				<button label="External Capture/Reload Event Enable" define="TIMER2_CON[3]">
					<combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER2_MOD[5]">
						<item label="Falling edge at pin T2EX" />
						<item label="Rising edge at pin T2EX" />
					</combo>
				</button>
				<button label="External Start Enable" define="TIMER2_MOD[6]">
					<combo label="Edge Select for External Start" define="TIMER2_MOD[7]">
						<item label="Falling edge at pin T2EX" />
						<item label="Rising edge at pin T2EX" />
					</combo>
				</button>
				<branch label="Timer Register">
					<radio define="TIMER2_TEMP_TIMER2_TIME_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER2_TEMP_TIME_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER2_TEMP_TIME_TIME" default="1"/>
						</button>
					</radio>
					<math label="Timer Value" role="hex" unit="ticks" define="TIMER2_T2[15:0]" formula="TIMER2_TEMP_TIMER2_TIME_SEL?floor(0x00010000-TIMER2_TEMP_TIME_TIME*TIMER2_CLK):(0x00010000-TIMER2_TEMP_TIME_TICK[15:0])"/>
				</branch>
				<branch label="Reload / Capture Register">
					<radio define="TIMER2_TEMP_TIMER2_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER2_TEMP_TIMER2_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER2_TEMP_TIMER2_TIME" default="1"/>
						</button>
					</radio>
					<math label="Reload Value" role="hex" unit="ticks" define="TIMER2_RC2[15:0]" formula="TIMER2_TEMP_TIMER2_SEL?floor(0x00010000-TIMER2_TEMP_TIMER2_TIME*TIMER2_CLK):(0x00010000-TIMER2_TEMP_TIMER2_TICK[15:0])"/>
				</branch>
				<branch label="Interrupt">
					<button label="External" define="TIMER2_EXF2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="TIMER2_CON1[0]"/>
						<edit label="Call Back" define="TIMER2_EXF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overflow / Underflow" define="TIMER2_TF2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="TIMER2_CON1[1]"/>
						<edit label="Call Back" define="TIMER2_TF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
			</branch>
				<branch label="Pin Select">
					<combo label="External Counter Input (T2IN)" define="SCU_MODPISEL2[1:0]" header="scu_defines.h" default="P2.5 (T2_1)">
						<item label="P0.0 (T2_0)" lockon="PORT_P0_DIR[0]=Input"/>
						<item label="P2.5 (T2_1)"/>
						<item label="P2.4 (T2_2)"/>
					</combo>
					<branch label="External Control Input (T2EX)">
						<radio define="SCU_MODPISEL1[6]" header="scu_defines.h">
							<button label="Pin Select" value="0">
								<combo label="External Control Input (T2EX)" define="SCU_MODPISEL2[5:4]" header="scu_defines.h" default="P2.2 (T2EX_0)">
									<item label="internal LIN Trx." value="1" lockon="SCU_MODPISEL[6]=0"/>
									<item label="P2.2 (T2EX_0)" value="0"/>
									<item label="P0.1 (T2EX_1)" value="1" lockon="PORT_P0_DIR[1]=Input;SCU_MODPISEL[6]=1"/>
									<item label="P2.4 (T2EX_2)" value="2"/>
									<item label="P2.6 (T2EX_3)" value="3"/>
								</combo>
							</button>
							<button label="CC6_COUT60" value="1" />
						</radio>
					</branch>
					<combo label="External Flag Output (EXF2)" define="TIMER2_EXF2_PINSEL" default="none">
						<item label="none"/>
						<item label="P0.2 (EXF2_0)" lockon="PORT_P0_DIR[2]=Output;PORT_P0_2_ALT[1:0]=EXF2_0"/>
					</combo>
				</branch>
			</button>
			<button label="Configure Timer21" define="TIMER21_Configuration_En">
				<math label="Timer21 Clock" unit="MHz" define="TIMER21_CLK" formula="TIMER21_MOD[4]?SCU_PLL_fPLL/(2^(TIMER21_MOD[3:1])):SCU_PLL_fPLL/12"/>
				<math label="Max. Period" unit="us" define="TIMER21_MAX_PERIOD" formula="65535/TIMER21_CLK"/>
				<branch label="Clock Setting">
					<radio label="Timer / Counter Select" define="TIMER21_CON[1]">
						<button label="Timer">
							<button label="Prescaler Enable" define="TIMER21_MOD[4]">
								<combo label="Prescaler" define="TIMER21_MOD[3:1]">
									<item label="divide by 1" />
									<item label="divide by 2" />
									<item label="divide by 4" />
									<item label="divide by 8" />
									<item label="divide by 16" />
									<item label="divide by 32" />
									<item label="divide by 64" />
									<item label="divide by 128" />
								</combo>
							</button>
						</button>
						<button label="Counter" />
					</radio>
				</branch>
				<branch label="Mode Select">
					<radio define="TIMER21_CON[0]">
						<button label="Auto-Reload Mode">
							<combo label="Up/Down Counter Enable" define="TIMER21_MOD[0]">
								<item label="Disabled" />
								<item label="Enabled" />
							</combo>
						</button>
						<button label="Capture Mode" />
					</radio>
				</branch>
				<button label="External Capture/Reload Event Enable" define="TIMER21_CON[3]">
					<combo label="Edge Select in Capture Mode / Reload Mode" define="TIMER21_MOD[5]">
						<item label="Falling edge at pin T21EX" />
						<item label="Rising edge at pin T21EX" />
					</combo>
				</button>
				<button label="External Start Enable" define="TIMER21_MOD[6]">
					<combo label="Edge Select for External Start" define="TIMER21_MOD[7]">
						<item label="Falling edge at pin T21EX" />
						<item label="Rising edge at pin T21EX" />
					</combo>
				</button>
				<branch label="Timer Register">
					<radio define="TIMER21_TEMP_TIMER2_TIME_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER21_TEMP_TIME_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER21_TEMP_TIME_TIME" default="1"/>
						</button>
					</radio>
					<math label="Timer Value" role="hex" unit="ticks" define="TIMER21_T2[15:0]" formula="TIMER21_TEMP_TIMER2_TIME_SEL?floor(0x00010000-TIMER21_TEMP_TIME_TIME*TIMER21_CLK):(0x00010000-TIMER21_TEMP_TIME_TICK[15:0])"/>
				</branch>
				<branch label="Reload / Capture Register">
					<radio define="TIMER21_TEMP_TIMER2_SEL">
						<button label="...as clock ticks" >
							<edit label="Value [ticks]" define="TIMER21_TEMP_TIMER2_TICK[15:0]" default="1" />
						</button>
						<button label="...as time [us]" >
							<edit label="Time [us]" define="TIMER21_TEMP_TIMER2_TIME" default="1"/>
						</button>
					</radio>
					<math label="Reload Value" role="hex" unit="ticks" define="TIMER21_RC2[15:0]" formula="TIMER21_TEMP_TIMER2_SEL?floor(0x00010000-TIMER21_TEMP_TIMER2_TIME*TIMER21_CLK):(0x00010000-TIMER21_TEMP_TIMER2_TICK[15:0])"/>
				</branch>
				<branch label="Interrupt">
					<button label="External" define="TIMER21_EXF2_INT_EN" lockon="CPU_NVIC_ISER[11]=1" header="isr_defines.h">
						<button label="Enable Interrupt" define="TIMER21_CON1[0]"/>
						<edit label="Call Back" define="TIMER21_EXF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Overflow / Underflow" define="TIMER21_TF2_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[11]=1">
						<button label="Enable Interrupt" define="TIMER21_CON1[1]"/>
						<edit label="Call Back" define="TIMER21_TF2_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<button label="External Counter Input (T21)" define="TIMER21_1IN_EN">
						<combo label="External Counter Input (T21)" define="SCU_MODPISEL2[3:2]" header="scu_defines.h" default="none">
							<item label="none" value="0"/>
							<item label="P0.1 (T21_0)" value="0" lockon="PORT_P0_DIR[1]=Input"/>
							<item label="P1.2 (T21_1)" value="1" lockon="PORT_P1_DIR[2]=Input"/>
							<item label="P0.4 (T21_2)" value="2" lockon="PORT_P0_DIR[4]=Input"/>
						</combo>
					</button>
					<branch label="External Control Input (T21EX)">
						<radio define="SCU_MODPISEL1[7]" header="scu_defines.h" default="1">
							<button label="Pin Select" value="0">
								<combo label="External Control Input (T21EX)" define="SCU_MODPISEL2[7:6]" header="scu_defines.h" default="none">
									<item label="none" value="0"/>
									<item label="P0.2 (T21EX_0)" value="0" lockon="PORT_P0_DIR[2]=Input"/>
									<item label="P1.4 (T21EX_1)" value="1" lockon="PORT_P1_DIR[4]=Input"/>
									<item label="P0.5 (T21EX_2)" value="2" lockon="PORT_P0_DIR[5]=Input"/>
									<item label="P1.1 (T21EX_3)" value="3" lockon="PORT_P1_DIR[1]=Input"/>
								</combo>
							</button>
							<button label="CC6_CH0" value="1" />
						</radio>
					</branch>
					<combo label="External Flag Output (EXF21)" define="TIMER21_EXF21_PINSEL" default="none">
						<item label="none"/>
						<item label="P0.0 (EXF21_0)" lockon="PORT_P0_DIR[0]=Output;PORT_P0_0_ALT[1:0]=EXF21_0"/>
						<item label="P1.1 (EXF21_1)" lockon="PORT_P1_DIR[1]=Output;PORT_P1_1_ALT[1:0]=EXF21_1"/>
					</combo>
				</branch>
			</button>
		</header>
	</module>
	<module label="UART" desc="Asynchronous Serial Communication">
		<header define="uart_defines.h">
			<button label="Configure UART1                          " define="UART1_Configuration_En">
				<math label="UART1 Clock" unit="MHz" define="UART1_CLK" formula="SCU_PLL_fPLL/(2^(SCU_BCON1[3:1]))"/>
				<branch label="Clock">
					<combo label="Prescaler" define="SCU_BCON1[3:1]" header="scu_defines.h" default="PCLK / 1">
						<item label="PCLK / 1"/>
						<item label="PCLK / 2"/>
						<item label="PCLK / 4"/>
						<item label="PCLK / 8"/>
						<item label="PCLK / 16"/>
						<item label="PCLK / 32"/>
					</combo>
				</branch>
				<branch label="BaudRate">
					<button label="Baudrate Generator running" define="SCU_BCON1[0]" header="scu_defines.h"/>
					<radio define="UART1_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="UART1_AUTO_BAUDRATE" default="19200">
								<item label="9600" lockon="UART1_MAN_BAUDRATE=9600"/>
								<item label="19200" lockon="UART1_MAN_BAUDRATE=19200"/>
								<item label="38400" lockon="UART1_MAN_BAUDRATE=38400"/>
								<item label="57600" lockon="UART1_MAN_BAUDRATE=57600"/>
								<item label="115200" lockon="UART1_MAN_BAUDRATE=115200"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="UART1_AUTO_BAUDRATE=1">
							<edit label="Baudrate [baud]" define="UART1_MAN_BAUDRATE" default="19200"/>
						</button>
					</radio>
					<math label="BaudRate Value" define="UART1_BRVAL[10:0]" formula="trunc((UART1_CLK*1000000)/(16*UART1_MAN_BAUDRATE))"/>
					<math label="Fractional Divider" define="UART1_FD[4:0]" formula="trunc((((UART1_CLK*1000000)/(16*UART1_MAN_BAUDRATE))-UART1_BRVAL[10:0])*32)"/>
					<math label="Effective Baudrate" define="UART1_BAUDRATE" formula="(UART1_CLK*1000000)/(16*(UART1_BRVAL[10:0]+(UART1_FD[4:0]/32)))"/>
				</branch>
				<branch label="Mode">
					<combo label="Mode Select" define="UART1_SCON[7:6]" default="Mode 1: 8-bit UART, variable baudrate">
						<item label="Mode 0: 8-bit shift register, fix baudrate fSYS/2"/>
						<item label="Mode 1: 8-bit UART, variable baudrate"/>
						<item label="Mode 2: 9-bit UART, fixed baud rate (fSYS/64 or fSYS/32)"/>
						<item label="Mode 3: 9-bit UART, variable baud rate"/>
					</combo>
					<button label="don't set Receive Interrupt if no StopBit was received (SM2)" define="UART1_SCON[5]" default="0"/>
					<button label="Receiver enabled" define="UART1_SCON[4]" default="0"/>
					<button label="STDIN/STDOUT enabled" define="UART1_STD_EN" default="0"/>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="UART1_RX_INT_EN" header="isr_defines.h" default="0" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN2[0]" header="int_defines.h"/>
						<edit label="Call Back" define="UART1_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmitter" define="UART1_TX_INT_EN" header="isr_defines.h" default="0" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN2[1]" header="int_defines.h"/>
						<edit label="Call Back" define="UART1_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<button label="TxD disconnected from integrated LIN-Trx" define="SCU_MODPISEL[7]" header="scu_defines.h" default="0"/>
					<button label="TXD1 (P0.2) UART sending" define="UART1_TXD_PINSEL" lockon="PORT_P0_DIR[2]=Output;PORT_P0_2_ALT[1:0]=UART1_TXD"/>
					<button label="RxD disconnected from integrated LIN-Trx" define="SCU_MODPISEL[6]" header="scu_defines.h" default="0"/>
					<button label="RXD1 (P0.1) UART receiving" define="UART1_RXD_PINSEL" lockon="PORT_P0_DIR[1]=Input"/>
				</branch>
			</button>
			<button label="Configure UART2                         " define="UART2_Configuration_En">
				<math label="UART2 Clock" unit="MHz" define="UART2_CLK" formula="SCU_PLL_fPLL/(2^(SCU_BCON2[3:1]))"/>
				<branch label="Clock">
					<combo label="Prescaler" define="SCU_BCON2[3:1]" header="scu_defines.h" default="PCLK / 1">
						<item label="PCLK / 1"/>
						<item label="PCLK / 2"/>
						<item label="PCLK / 4"/>
						<item label="PCLK / 8"/>
						<item label="PCLK / 16"/>
						<item label="PCLK / 32"/>
					</combo>
				</branch>
				<branch label="BaudRate">
					<button label="Baudrate Generator running" define="SCU_BCON2[0]" header="scu_defines.h"/>
					<radio define="UART2_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="UART2_AUTO_BAUDRATE" default="19200">
								<item label="9600" lockon="UART2_MAN_BAUDRATE=9600"/>
								<item label="19200" lockon="UART2_MAN_BAUDRATE=19200"/>
								<item label="38400" lockon="UART2_MAN_BAUDRATE=38400"/>
								<item label="57600" lockon="UART2_MAN_BAUDRATE=57600"/>
								<item label="115200" lockon="UART2_MAN_BAUDRATE=115200"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="UART2_AUTO_BAUDRATE=1">
							<edit label="Baudrate [baud]" define="UART2_MAN_BAUDRATE" default="19200"/>
						</button>
					</radio>
					<math label="BaudRate Value" define="UART2_BRVAL[10:0]" formula="trunc((UART2_CLK*1000000)/(16*UART2_MAN_BAUDRATE))"/>
					<math label="Fractional Divider" define="UART2_FD[4:0]" formula="trunc((((UART2_CLK*1000000)/(16*UART2_MAN_BAUDRATE))-UART2_BRVAL[10:0])*32)"/>
					<math label="Effective Baudrate" define="UART2_BAUDRATE" formula="(UART2_CLK*1000000)/(16*(UART2_BRVAL[10:0]+(UART2_FD[4:0]/32)))"/>
				</branch>
				<branch label="Mode">
					<combo label="Mode Select" define="UART2_SCON[7:6]" default="Mode 1: 8-bit UART, variable baudrate">
						<item label="Mode 0: 8-bit shift register, fix baudrate fSYS/2"/>
						<item label="Mode 1: 8-bit UART, variable baudrate"/>
						<item label="Mode 2: 9-bit UART, fixed baud rate (fSYS/64 or fSYS/32)"/>
						<item label="Mode 3: 9-bit UART, variable baud rate"/>
					</combo>
					<button label="don't set Receive Interrupt if no StopBit was received (SM2)" define="UART2_SCON[5]" default="0"/>
					<button label="Receiver enabled" define="UART2_SCON[4]" default="0"/>
					<button label="STDIN/STDOUT enabled" define="UART2_STD_EN" default="0"/>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="UART2_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[11]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN2[6]" header="int_defines.h"/>
						<edit label="Call Back" define="UART2_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmit" define="UART2_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[11]=1">
 						<button label="Enable Interrupt" define="SCU_MODIEN2[7]" header="int_defines.h"/>
 						<edit label="Call Back" define="UART2_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<button label="TXD2 (P1.0) UART sending" define="UART2_TXD_PINSEL" lockon="PORT_P1_DIR[0]=Output;PORT_P1_0_ALT[1:0]=UART2_TXD"/>
					<button label="RXD2 (P1.1) UART receiving" define="UART2_RXD_PINSEL" lockon="PORT_P1_DIR[1]=Input"/>
				</branch>
			</button>
		</header>
	</module>
	<module label="SSC" desc="High-Speed Synchronous Serial Interface">
		<header define="ssc_defines.h">
			<button label="Configure SSC1                            " define="SSC1_CON[15]">
				<math label="SSC1 Clock" unit="MHz" define="SSC1_TEMP_CLK" formula="SCU_PLL_fPLL"/>
				<math label="Max. Baud Rate" unit="kBaud" formula="1000*SCU_PLL_fPLL/2" />
				<branch label="Mode Select">
					<combo label="Master Select" define="SSC1_CON[14]">
						<item label="Slave Mode" lockon="SSC1_TEMP_BRG=0;SSC1_TEMP_MS=0" />
						<item label="Master Mode" lockon="SSC1_TEMP_BRG=1;SSC1_TEMP_MS=1" />
					</combo>
					<combo label="Data Width Selection" define="SSC1_CON[3:0]" default="2 bits">
						<item label="2 bits" value="1" />
						<item label="3 bits" value="2" />
						<item label="4 bits" value="3" />
						<item label="5 bits" value="4" />
						<item label="6 bits" value="5" />
						<item label="7 bits" value="6" />
						<item label="8 bits" value="7" />
						<item label="9 bits" value="8" />
						<item label="10 bits" value="9" />
						<item label="11 bits" value="10" />
						<item label="12 bits" value="11" />
						<item label="13 bits" value="12" />
						<item label="14 bits" value="13" />
						<item label="15 bits" value="14" />
						<item label="16 bits" value="15" />
					</combo>
					<combo label="Heading Control" define="SSC1_CON[4]">
						<item label="Transmit/Receive LSB First" />
						<item label="Transmit/Receive MSB First" />
					</combo>
					<combo label="Clock Phase Control" define="SSC1_CON[5]">
						<item label="Shift transmit data on the leading clock edge, latch on trailing edge" />
						<item label="Latch receive data on leading clock edge, shift on trailing edge" />
					</combo>
					<combo label="Clock Polarity Control" define="SSC1_CON[6]">
						<item label="Idle clock line is low, leading clock edge is low-to-high transition" />
						<item label="Idle clock line is high, leading clock edge is high-to-low transition" />
					</combo>
					<combo label="Loop Back Control" define="SSC1_CON[7]">
						<item label="Normal output" />
						<item label="Receive input is connected with transmit output (half-duplex mode)" />
					</combo>
				</branch>
				<button label="Baud Rate Generation" define="SSC1_TEMP_BRG">
					<radio define="SSC1_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="SSC1_AUTO_BAUDRATE" default="1 MBaud">
								<item label="10 kBaud" lockon="SSC1_MAN_BAUDRATE=10"/>
								<item label="100 kBaud" lockon="SSC1_MAN_BAUDRATE=100"/>
								<item label="500 kBaud" lockon="SSC1_MAN_BAUDRATE=500"/>
								<item label="1 MBaud" lockon="SSC1_MAN_BAUDRATE=1000"/>
								<item label="5 MBaud" lockon="SSC1_MAN_BAUDRATE=5000"/>
								<item label="10 MBaud" lockon="SSC1_MAN_BAUDRATE=10000"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="SSC1_AUTO_BAUDRATE=1 MBaud">
							<edit label="Baudrate [kBaud]" define="SSC1_MAN_BAUDRATE" default="1000"/>
						</button>
					</radio>
					<math label="Reload Value" define="SSC1_BR[15:0]" formula="trunc((SSC1_TEMP_CLK/(2000*SSC1_MAN_BAUDRATE)*1000000)-0.5)" />
					<math label="Effective Baud Rate" unit="kBaud" define="SSC1_TEMP_BR" formula="1000*SCU_PLL_fPLL/(2*(SSC1_BR[15:0]+1))" />
				</button>
				<branch label="Error Enable">
					<button label="Transmit Error Enable" define="SSC1_CON[8]" />
					<button label="Receive Error Enable" define="SSC1_CON[9]" />
					<button label="Phase Error Enable" define="SSC1_CON[10]" />
					<button label="Baud Rate Error Enable" define="SSC1_CON[11]">
						<combo label="Automatic Reset Enable" define="SSC1_CON[12]">
							<item label="No additional action upon a baud rate error" />
							<item label="The SSC is automatically reset upon a baud rate error" />
						</combo>
					</button>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="SSC1_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[8]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN1[2]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC1_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmit" define="SSC1_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[8]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN1[1]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC1_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Error" define="SSC1_ERR_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[8]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN1[0]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC1_ERR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<radio define="SSC1_TEMP_MS" default="2">
						<button label="Slave Mode">
							<combo label="Transmitter Output Select" define="SSC1_TEMP_SOS" default="P0.5 (SSC1_S_MRST)">
								<item label="P0.2 (SSC12_S_MRST)" lockon="PORT_P0_DIR[2]=Output;PORT_P0_2_ALT[1:0]=SSC12_S_MRST;SSC2_TEMP_SOS=P1.2 (SSC2_S_MRST)" value="1" />
								<item label="P0.5 (SSC1_S_MRST)" lockon="PORT_P0_DIR[5]=Output;PORT_P0_5_ALT[1:0]=SSC1_S_MRST" value="0" />
							</combo>
							<combo label="Receiver Input Select" define="SSC1_TEMP_SIS" default="P0.4 (SSC1_S_MTSR)">
								<item label="P1.4 (SSC12_S_MTSR)" lockon="PORT_P1_DIR[4]=Input" value="1" />
								<item label="P0.4 (SSC1_S_MTSR)" lockon="PORT_P0_DIR[4]=Input" value="0" />
							</combo>
							<combo label="Clock Input Select" define="SSC1_TEMP_CIS" default="P0.3 (SSC1_S_SCK)">
								<item label="P0.1 (SSC12_S_SCK)" lockon="PORT_P0_DIR[1]=Input" value="1" />
								<item label="P0.3 (SSC1_S_SCK)" lockon="PORT_P0_DIR[3]=Input" value="0" />
							</combo>
						</button>
						<button label="Master Mode">
							<combo label="Transmitter Output Select" define="SSC1_TEMP_MOS" default="P0.4 (SSC1_M_MTSR)">
								<item label="P1.4 (SSC12_M_MTSR)" lockon="PORT_P1_DIR[4]=Output;PORT_P1_4_ALT[1:0]=SSC12_M_MTSR;SSC2_TEMP_MOS=P1.1 (SSC2_M_MTSR)" value="1" />
								<item label="P0.4 (SSC1_M_MTSR)" lockon="PORT_P0_DIR[4]=Output;PORT_P0_4_ALT[1:0]=SSC1_M_MTSR" value="0" />
							</combo>
							<combo label="Receiver Input Select" define="SSC1_TEMP_MIS" default="P0.5 (SSC1_M_MRST)">
								<item label="P0.2 (SSC12_M_MRST)" lockon="PORT_P0_DIR[2]=Input" value="1" />
								<item label="P0.5 (SSC1_M_MRST)" lockon="PORT_P0_DIR[5]=Input" value="0" />
							</combo>
							<combo label="Clock Output Select" define="SSC1_TEMP_COS" default="P0.3 (SSC1_M_SCK)">
								<item label="P0.1 (SSC12_M_SCK)" lockon="PORT_P0_DIR[1]=Output;PORT_P0_1_ALT[1:0]=SSC12_M_SCK;SSC2_TEMP_COS=P1.0 (SSC2_M_SCK)" value="1" />
								<item label="P0.3 (SSC1_M_SCK)" lockon="PORT_P0_DIR[3]=Output;PORT_P0_3_ALT[1:0]=SSC1_M_SCK" value="0" />
							</combo>
						</button>
						<button label="Inactive">
						</button>
					</radio>
					<math define="SSC1_PISEL" formula="(SSC1_TEMP_CIS.*0x1)*4+(SSC1_TEMP_SIS.*0x1)*2+(SSC1_TEMP_MIS.*0x1)" />
				</branch>
			</button>
			<button label="Configure SSC2                          " define="SSC2_CON[15]">
				<math label="SSC2 Clock" unit="MHz" define="SSC2_TEMP_CLK" formula="SCU_PLL_fPLL"/>
				<math label="Max. Baud Rate" unit="kBaud" formula="1000*SCU_PLL_fPLL/2" />
				<branch label="Mode Select">
					<combo label="Master Select" define="SSC2_CON[14]">
						<item label="Slave Mode" lockon="SSC2_TEMP_BRG=0;SSC2_TEMP_MS=0" />
						<item label="Master Mode" lockon="SSC2_TEMP_BRG=1;SSC2_TEMP_MS=1" />
					</combo>
					<combo label="Data Width Selection" define="SSC2_CON[3:0]" default="2 bits">
						<item label="2 bits" value="1" />
						<item label="3 bits" value="2" />
						<item label="4 bits" value="3" />
						<item label="5 bits" value="4" />
						<item label="6 bits" value="5" />
						<item label="7 bits" value="6" />
						<item label="8 bits" value="7" />
						<item label="9 bits" value="8" />
						<item label="10 bits" value="9" />
						<item label="11 bits" value="10" />
						<item label="12 bits" value="11" />
						<item label="13 bits" value="12" />
						<item label="14 bits" value="13" />
						<item label="15 bits" value="14" />
						<item label="16 bits" value="15" />
					</combo>
					<combo label="Heading Control" define="SSC2_CON[4]">
						<item label="Transmit/Receive LSB First" />
						<item label="Transmit/Receive MSB First" />
					</combo>
					<combo label="Clock Phase Control" define="SSC2_CON[5]">
						<item label="Shift transmit data on the leading clock edge, latch on trailing edge" />
						<item label="Latch receive data on leading clock edge, shift on trailing edge" />
					</combo>
					<combo label="Clock Polarity Control" define="SSC2_CON[6]">
						<item label="Idle clock line is low, leading clock edge is low-to-high transition" />
						<item label="Idle clock line is high, leading clock edge is high-to-low transition" />
					</combo>
					<combo label="Loop Back Control" define="SSC2_CON[7]">
						<item label="Normal output" />
						<item label="Receive input is connected with transmit output (half-duplex mode)" />
					</combo>
				</branch>
				<button label="Baud Rate Generation" define="SSC2_TEMP_BRG">
					<radio define="SSC2_AUTO_BAUD_SEL">
						<button label="Automatic Baudrate Configuration">
							<combo label="BaudRate" define="SSC2_AUTO_BAUDRATE" default="1 MBaud">
								<item label="10 kBaud" lockon="SSC2_MAN_BAUDRATE=10"/>
								<item label="100 kBaud" lockon="SSC2_MAN_BAUDRATE=100"/>
								<item label="500 kBaud" lockon="SSC2_MAN_BAUDRATE=500"/>
								<item label="1 MBaud" lockon="SSC2_MAN_BAUDRATE=1000"/>
								<item label="5 MBaud" lockon="SSC2_MAN_BAUDRATE=5000"/>
								<item label="10 MBaud" lockon="SSC2_MAN_BAUDRATE=10000"/>
							</combo>
						</button>
						<button label="Manual Baudrate Configuration" lockon="SSC2_AUTO_BAUDRATE=1 MBaud">
							<edit label="Baudrate [kBaud]" define="SSC2_MAN_BAUDRATE" default="1000"/>
						</button>
					</radio>
					<math label="Reload Value" define="SSC2_BR[15:0]" formula="trunc((SSC2_TEMP_CLK/(2000*SSC2_MAN_BAUDRATE)*1000000)-0.5)" />
					<math label="Effective Baud Rate" unit="kBaud" define="SSC2_TEMP_BR" formula="1000*SCU_PLL_fPLL/(2*(SSC2_BR[15:0]+1))" />
				</button>
				<branch label="Error Enable">
					<button label="Transmit Error Enable" define="SSC2_CON[8]" />
					<button label="Receive Error Enable" define="SSC2_CON[9]" />
					<button label="Phase Error Enable" define="SSC2_CON[10]" />
					<button label="Baud Rate Error Enable" define="SSC2_CON[11]">
						<combo label="Automatic Reset Enable" define="SSC2_CON[12]">
							<item label="No additional action upon a baud rate error" />
							<item label="The SSC is automatically reset upon a baud rate error" />
						</combo>
					</button>
				</branch>
				<branch label="Interrupt">
					<button label="Receive" define="SSC2_RX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[9]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN1[10]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC2_RX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Transmit" define="SSC2_TX_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[9]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN1[9]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC2_TX_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Error" define="SSC2_ERR_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[9]=1">
						<button label="Enable Interrupt" define="SCU_MODIEN1[8]" header="int_defines.h"/>
						<edit label="Call Back" define="SSC2_ERR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="Pin Select">
					<radio define="SSC2_TEMP_MS" default="2">
						<button label="Slave Mode">
							<combo label="Transmitter Output Select" define="SSC2_TEMP_SOS" default="P1.2 (SSC2_S_MRST)">
								<item label="P0.2 (SSC12_S_MRST)" lockon="PORT_P0_DIR[2]=Output;PORT_P0_2_ALT[1:0]=SSC12_S_MRST;SSC1_TEMP_SOS=P0.5 (SSC1_S_MRST)" value="1" />
								<item label="P1.2 (SSC2_S_MRST)" lockon="PORT_P1_DIR[2]=Output;PORT_P1_2_ALT[1:0]=SSC2_S_MRST" value="0" />
							</combo>
							<combo label="Receiver Input Select" define="SSC2_TEMP_SIS" default="P1.1 (SSC2_S_MTSR)">
								<item label="P1.4 (SSC12_S_MTSR)" lockon="PORT_P1_DIR[4]=Input" value="1" />
								<item label="P1.1 (SSC2_S_MTSR)" lockon="PORT_P1_DIR[1]=Input" value="0" />
							</combo>
							<combo label="Clock Input Select" define="SSC2_TEMP_CIS" default="P1.0 (SSC2_S_SCK)">
								<item label="P0.1 (SSC12_S_SCK)" lockon="PORT_P0_DIR[1]=Input" value="1" />
								<item label="P1.0 (SSC2_S_SCK)" lockon="PORT_P1_DIR[0]=Input" value="0" />
							</combo>
						</button>
						<button label="Master Mode">
							<combo label="Transmitter Output Select" define="SSC2_TEMP_MOS" default="P1.1 (SSC2_M_MTSR)">
								<item label="P1.4 (SSC12_M_MTSR)" lockon="PORT_P1_DIR[4]=Output;PORT_P1_4_ALT[1:0]=SSC12_M_MTSR;SSC1_TEMP_MOS=P0.4 (SSC1_M_MTSR)" value="1" />
								<item label="P1.1 (SSC2_M_MTSR)" lockon="PORT_P1_DIR[1]=Output;PORT_P1_1_ALT[1:0]=SSC2_M_MTSR" value="0" />
							</combo>
							<combo label="Receiver Input Select" define="SSC2_TEMP_MIS" default="P1.2 (SSC2_M_MRST)">
								<item label="P0.2 (SSC12_M_MRST)" lockon="PORT_P0_DIR[2]=Input" value="1" />
								<item label="P1.2 (SSC2_M_MRST)" lockon="PORT_P1_DIR[2]=Input" value="0" />
							</combo>
							<combo label="Clock Output Select" define="SSC2_TEMP_COS" default="P1.0 (SSC2_M_SCK)">
								<item label="P0.1 (SSC12_M_SCK)" lockon="PORT_P0_DIR[1]=Output;PORT_P0_1_ALT[1:0]=SSC12_M_SCK;SSC1_TEMP_COS=P0.3 (SSC1_M_SCK)" value="1" />
								<item label="P1.0 (SSC2_M_SCK)" lockon="PORT_P1_DIR[0]=Output;PORT_P1_0_ALT[1:0]=SSC2_M_SCK" value="0" />
							</combo>
						</button>
						<button label="Inactive">
						</button>
					</radio>
					<math label="" define="SSC2_PISEL" formula="(SSC2_TEMP_CIS.*0x1)*4+(SSC2_TEMP_SIS.*0x1)*2+(SSC2_TEMP_MIS.*0x1)" />
					<math label="" define="SCU_MODPISEL[18:16]" header="scu_defines.h" formula="(SSC2_TEMP_SOS.*1)*4+(SSC2_TEMP_MOS.*1)*2+(SSC2_TEMP_COS.*1)" />
				</branch>
			</button>
		</header>
	</module>
	<module label="LIN" desc="LIN Tranceiver">
		<header define="lin_defines.h">
			<button label="Configure LIN" define="LIN_Configuration_En">
				<combo label="Tranceiver Mode" define="LIN_CTRL[2:1]" default="Normal">
					<item label="Sleep Mode" value="0"/>
					<item label="Receive-Only" value="1"/>
					<item label="Normal" value="3"/>
				</combo>
				<combo label="Slope Mode" define="LIN_CTRL[12:11]" default="Normal - 20kBaud">
					<item label="Low    - 10.4kBaud" value="2"/>
					<item label="Normal - 20kBaud" value="0"/>
					<item label="Fast   - 40kBaud" value="1"/>
					<item label="Flash  - 150kBaud" value="3"/>
				</combo>
				<button label="High Voltage I/O Mode enable" define="LIN_CTRL[21]"/>
				<branch label="Diagnostic Interrupt">
					<button label="Slope Mode Error" define="LIN_SMERR_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="LIN_IRQEN[3]"/>
						<edit label="Call Back" define="LIN_SMERR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Over Current" define="LIN_OC_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="LIN_IRQEN[5]"/>
						<edit label="Call Back" define="LIN_OC_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Over Temperature" define="LIN_OT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="LIN_IRQEN[4]"/>
						<edit label="Call Back" define="LIN_OT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
					<button label="Tx Timeout" define="LIN_TMOUT_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
						<button label="Enable Interrupt" define="LIN_IRQEN[6]"/>
						<edit label="Call Back" define="LIN_TMOUT_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
					</button>
				</branch>
				<branch label="LIN Synch Detection">
					<edit label="Master Baudrate [baud]" define="LIN_MASTER_BAUDRATE" default="19200"/>
					<math label="" define="SCU_LINST[2:1]" formula="SCU_FSYS/LIN_MASTER_BAUDRATE>576?3:SCU_FSYS/LIN_MASTER_BAUDRATE>288?2:SCU_FSYS/LIN_MASTER_BAUDRATE>144?1:0"/>
					<button label="Baudrate detection (Timer2)" define="LIN_AUTOBAUD_EN" lockon="TIMER2_Configuration_En=1;TIMER2_CON[1]=0;TIMER2_CON[0]=1;TIMER2_CON[3]=1;TIMER2_MOD[5]=0;TIMER2_MOD[6]=1;TIMER2_MOD[7]=0;TIMER2_MOD[4]=1;TIMER2_MOD[3:1]=divide by 1;SCU_MODPISEL1[6]=0;SCU_MODPISEL2[5:4]=0">
					</button>
					<branch label="Interrupt">
						<button label="End-of-Synch" define="LIN_EOF_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
							<button label="Enable Interrupt" define="LIN_SYNC[0]" header="lin_defines.h"/>
							<edit label="Call Back" define="LIN_EOF_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
						</button>
						<button label="Error-in-Synch" define="LIN_ERR_INT_EN" header="isr_defines.h" lockon="CPU_NVIC_ISER[10]=1">
							<button label="Enable Interrupt" define="LIN_SYNC[1]" header="lin_defines.h"/>
							<edit label="Call Back" define="LIN_ERR_CALLBACK" header="isr_defines.h" role="string" default="place_your_function_call_back_here"/>
						</button>
						<math label="" define="SCU_LINST[6]" formula="LIN_SYNC[0] .+ LIN_SYNC[1]"/>
					</branch>
				</branch>
			</button>
		</header>
	</module>
</ifxmlcfg>
